{"version":3,"file":"index.js","sources":["../../../utils/dist/es/index.js","../../src/executors/request/Request.ts","../../src/client/AbstractHttpClient.ts","../../src/executors/response/Response.ts","../../src/utils/utils.ts","../../src/executors/Executor.ts","../../src/executors/GetExecutor.ts","../../src/executors/PostExecutor.ts","../../src/executors/QueryExecutor.ts","../../src/executors/PageableQueryExecutor.ts","../../src/client/HttpClient.ts"],"sourcesContent":["const p = Object.prototype.toString, $ = ((t) => (e) => {\n  let r = p.call(e);\n  return t[r] || (t[r] = r.slice(8, -1).toLowerCase());\n})(/* @__PURE__ */ Object.create(null)), o = (t) => (t = t.toLowerCase(), function(r) {\n  return $(r) === t;\n}), C = (t, e) => function() {\n  return t.apply(e, arguments);\n}, a = (t) => Array.isArray(t), f = (t) => typeof t > \"u\", B = (t) => t !== null && !f(t) && t.constructor !== null && !f(t.constructor) && typeof t.constructor.isBuffer == \"function\" && t.constructor.isBuffer(t), d = o(\"ArrayBuffer\"), A = (t) => {\n  let e;\n  return typeof ArrayBuffer < \"u\" && ArrayBuffer.isView ? e = ArrayBuffer.isView(t) : e = t && t.buffer && d(t.buffer), e;\n}, O = (t) => typeof t == \"string\", W = (t) => typeof t == \"boolean\", F = (t) => typeof t == \"number\" && isFinite(t), m = (t) => t != null && typeof t == \"object\" && Array.isArray(t) === !1, c = (t) => {\n  if ($(t) !== \"object\")\n    return !1;\n  let e = Object.getPrototypeOf(t);\n  return e === null || e === Object.prototype;\n}, S = o(\"Date\"), w = o(\"File\"), b = o(\"Blob\"), h = o(\"FileList\"), l = (t) => p.call(t) === \"[object Function]\", P = (t) => m(t) && l(t.pipe), D = (t) => {\n  let e = \"[object FormData]\";\n  return t && (typeof FormData == \"function\" && t instanceof FormData || p.call(t) === e || l(t.toString) && t.toString() === e);\n}, L = o(\"URLSearchParams\"), U = (t) => t.trim ? t.trim() : t.replace(/^\\s+|\\s+$/g, \"\"), N = () => typeof navigator < \"u\" && (navigator.product === \"ReactNative\" || navigator.product === \"NativeScript\" || navigator.product === \"NS\") ? !1 : typeof window < \"u\" && typeof document < \"u\", y = (t, e) => {\n  if (!(t === null || typeof t > \"u\"))\n    if (typeof t != \"object\" && (t = [t]), a(t))\n      for (let r = 0, n = t.length; r < n; r++)\n        e.call(null, t[r], r, t);\n    else\n      for (let r in t)\n        Object.prototype.hasOwnProperty.call(t, r) && e.call(null, t[r], r, t);\n}, V = (t, e, r) => (y(e, function(i, s) {\n  r && typeof i == \"function\" ? t[s] = C(i, r) : t[s] = i;\n}), t), x = (t) => (t.charCodeAt(0) === 65279 && (t = t.slice(1)), t), E = (t, e, r, n) => {\n  t.prototype = Object.create(e.prototype, n), t.prototype.constructor = t, r && Object.assign(t.prototype, r);\n}, j = (t, e, r) => {\n  let n, i, s, g = {};\n  e = e || {};\n  do {\n    for (n = Object.getOwnPropertyNames(t), i = n.length; i-- > 0; )\n      s = n[i], g[s] || (e[s] = t[s], g[s] = !0);\n    t = Object.getPrototypeOf(t);\n  } while (t && (!r || r(t, e)) && t !== Object.prototype);\n  return e;\n}, R = (t, e, r) => {\n  t = String(t), (r === void 0 || r > t.length) && (r = t.length), r -= e.length;\n  let n = t.indexOf(e, r);\n  return n !== -1 && n === r;\n}, T = (t) => {\n  if (!t)\n    return null;\n  let e = t.length;\n  if (f(e))\n    return null;\n  let r = new Array(e);\n  for (; e-- > 0; )\n    r[e] = t[e];\n  return r;\n}, M = function(t) {\n  return function(e) {\n    return t && e instanceof t;\n  };\n}(typeof Uint8Array < \"u\" && Object.getPrototypeOf(Uint8Array)), _ = (t = 1e3) => new Promise((e) => {\n  setTimeout(e, t);\n}), u = function(...t) {\n  let e = arguments[0], r = (n, i) => {\n    c(e[i]) && c(n) ? e[i] = u(e[i], n) : c(n) ? e[i] = u({}, n) : a(n) ? e[i] = n.slice() : e[i] = n;\n  };\n  for (let n = 0, i = arguments.length; n < i; n++)\n    y(arguments[n], r);\n  return e;\n}, z = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({\n  __proto__: null,\n  delay: _,\n  endsWith: R,\n  extend: V,\n  forEach: y,\n  inherits: E,\n  isArray: a,\n  isArrayBuffer: d,\n  isArrayBufferView: A,\n  isBlob: b,\n  isBoolean: W,\n  isBuffer: B,\n  isDate: S,\n  isFile: w,\n  isFileList: h,\n  isFormData: D,\n  isFunction: l,\n  isNumber: F,\n  isObject: m,\n  isPlainObject: c,\n  isStandardBrowserEnv: N,\n  isStream: P,\n  isString: O,\n  isTypedArray: M,\n  isURLSearchParams: L,\n  isUndefined: f,\n  merge: u,\n  stripBOM: x,\n  toArray: T,\n  toFlatObject: j,\n  trim: U\n}, Symbol.toStringTag, { value: \"Module\" })), I = u, K = _, q = M, G = T, H = R, J = j, Q = E, X = x, Y = V, Z = y, k = N, v = U, tt = L, et = D, rt = P, nt = l, it = h, st = b, ot = w, ct = S, ft = c, ut = m, at = F, lt = O, yt = A, pt = d, dt = B, mt = f, gt = a;\nexport {\n  z as default,\n  K as delay,\n  H as endsWith,\n  Y as extend,\n  Z as forEach,\n  Q as inherits,\n  gt as isArray,\n  pt as isArrayBuffer,\n  yt as isArrayBufferView,\n  st as isBlob,\n  dt as isBuffer,\n  ct as isDate,\n  ot as isFile,\n  it as isFileList,\n  et as isFormData,\n  nt as isFunction,\n  at as isNumber,\n  ut as isObject,\n  ft as isPlainObject,\n  k as isStandardBrowserEnv,\n  rt as isStream,\n  lt as isString,\n  q as isTypedArray,\n  tt as isURLSearchParams,\n  mt as isUndefined,\n  I as merge,\n  X as stripBOM,\n  G as toArray,\n  J as toFlatObject,\n  v as trim\n};\n//# sourceMappingURL=index.js.map\n","export type RequestData = (DefaultQueryRequestData | DefaultPageableQueryRequestData | any);\r\nexport type RequestParams = any;\r\n\r\nexport interface IQueryRequestData {\r\n    query?: string | null\r\n    idProperty?: string | null\r\n    order?: Order\r\n    condition?: Condition\r\n    sorts?: Array<Order>\r\n    queryProperties?: Array<string>\r\n    excludeIds?: Array<string>\r\n    joins?: Array<Join> | Array<any>\r\n    fetches?: Array<Join> | Array<any>\r\n}\r\n\r\nexport interface IPageableQueryRequestData extends IQueryRequestData {\r\n    size: number\r\n    page: number\r\n    pageOffset?: number\r\n}\r\n\r\nexport class DefaultQueryRequestData implements IQueryRequestData {\r\n    order = new Order(\"id\", 'asc')\r\n    queryProperties = ['id']\r\n}\r\n\r\nexport class DefaultPageableQueryRequestData extends DefaultQueryRequestData implements IPageableQueryRequestData {\r\n    size: number = 10\r\n    page: number = 1\r\n    pageOffset: number = -1\r\n\r\n    constructor(page: number = 1, size: number = 10, pageOffset: number = -1) {\r\n        super();\r\n        this.page = page;\r\n        this.size = size;\r\n        this.pageOffset = pageOffset;\r\n    }\r\n\r\n    setSize(size: number) {\r\n        this.size = size;\r\n    }\r\n\r\n    setPage(page: number) {\r\n        this.page = page;\r\n    }\r\n\r\n    setPageOffset(pageOffset: number) {\r\n        this.pageOffset = pageOffset;\r\n    }\r\n}\r\n\r\nexport class Join {\r\n    constructor(property?: string, joinType?: string, on?: Array<Condition>) {\r\n        this.property = property || this.property;\r\n        this.joinType = joinType || this.joinType;\r\n        this.on = on || this.on;\r\n    }\r\n\r\n    property: string | null = null\r\n    joinType: string | null = null\r\n    on: Array<Condition> | null = null\r\n\r\n    of(property: string, joinType: string, on: Array<Condition>) {\r\n        return new Join(property, joinType, on);\r\n    }\r\n}\r\n\r\n\r\nexport class Order {\r\n    property?: string | null = null\r\n    direction?: OrderDirection = 'asc'\r\n\r\n    constructor(property?: string, direction?: OrderDirection) {\r\n        this.property = property\r\n        this.direction = direction;\r\n    }\r\n\r\n    of(property: string, direction: OrderDirection = EOrderDirection.Asc) {\r\n        return new Order(property, direction);\r\n    }\r\n}\r\n\r\n\r\nexport class Condition {\r\n    property?: string | null = null\r\n    value?: number | boolean | string | null | '' | Array<number | boolean | string> = null\r\n    opt: ConditionOpt = 'eq'\r\n    and: Array<Condition> = []\r\n    or: Array<Condition> = []\r\n\r\n    constructor(property?: string | null, value?: number | boolean | string | null | '' | Array<number | boolean | string>, opt?: ConditionOpt | null) {\r\n        this.property = property || this.property;\r\n        this.value = value || this.value;\r\n        this.opt = opt || this.opt;\r\n    }\r\n\r\n    addAnd(condition: Condition) {\r\n        this.and.push(condition);\r\n    }\r\n\r\n    addOr(condition: Condition) {\r\n        this.or.push(condition);\r\n    }\r\n}\r\n\r\nexport type ConditionOpt =\r\n    EConditionOpt\r\n    | 'equals'\r\n    | 'eq'\r\n    | 'ge'\r\n    | 'gt'\r\n    | 'lt'\r\n    | 'le'\r\n    | 'ne'\r\n    | 'notlike'\r\n    | 'like'\r\n    | 'like:'\r\n    | ':like'\r\n    | ':like:'\r\n    | 'lk'\r\n    | 'lk:'\r\n    | ':lk'\r\n    | ':lk:'\r\n    | 'between'\r\n    | 'btw'\r\n    | 'isnull'\r\n    | 'isnotnull'\r\n    | 'isempty'\r\n    | 'isnotempty'\r\n    | 'in'\r\n    | 'notin';\r\nexport type OrderDirection = EOrderDirection | 'asc' | 'desc';\r\n\r\nexport enum EOrderDirection {\r\n    Asc = 'asc',\r\n    Desc = 'desc'\r\n}\r\n\r\nexport enum EConditionOpt {\r\n    equals = 'equals',\r\n    eq = 'eq',\r\n    ge = 'ge',\r\n    gt = 'gt',\r\n    lt = 'lt',\r\n    le = 'le',\r\n    ne = 'ne',\r\n    notlike = 'notlike',\r\n    like = 'like',\r\n    'like:' = 'like:',\r\n    ':like' = ':like',\r\n    ':like:' = ':like:',\r\n    'lk' = 'like',\r\n    'lk:' = 'like:',\r\n    ':lk' = ':like',\r\n    ':lk:' = ':like:',\r\n    between = 'between',\r\n    btw = 'btw',\r\n    isnull = 'isnull',\r\n    isnotnull = 'isnotnull',\r\n    isempty = 'isempty',\r\n    isnotempty = 'isnotempty',\r\n    in = 'in',\r\n    notin = 'notin'\r\n}\r\n\r\nexport enum HttpContentType {\r\n    'application/atom+xml' = 'application/atom+xml',\r\n    'application/json' = 'application/json',\r\n    'application/x-www-form-urlencoded' = 'application/x-www-form-urlencoded',\r\n    'application/xml' = 'application/xml',\r\n    'multipart/form-data' = 'multipart/form-data',\r\n    'text/html' = 'text/html',\r\n    'text/plain' = 'text/plain'\r\n}\r\n\r\nexport enum HttpMethod {\r\n    POST = 'POST',\r\n    GET = 'GET',\r\n    DELETE = 'DELETE',\r\n    HEAD = 'HEAD',\r\n    OPTIONS = 'OPTIONS',\r\n    PUT = 'PUT',\r\n    PATCH = 'PATCH',\r\n    PURGE = 'PURGE',\r\n    LINK = 'LINK',\r\n    UNLINK = 'UNLINK'\r\n}","import {AxiosInstance, CreateAxiosDefaults, default as axios} from \"axios\";\r\nimport {merge} from \"@bianmaba/utils\";\r\nimport {HttpContentType} from \"../executors/request/Request\";\r\n\r\n\r\nexport default class AbstractHttpClient {\r\n\r\n    constructor(options: CreateAxiosDefaults = {}) {\r\n        axios.defaults = merge(axios.defaults || {}, {\r\n            headers: {\r\n                'X-Requested-With': 'XMLHttpRequest',\r\n                'Content-Type': HttpContentType[\"application/json\"]\r\n            }\r\n        }, options);\r\n        console.debug(\"初始化全局配置...\")\r\n        console.debug(\"全局配置初始化完成。\")\r\n    }\r\n\r\n    public createAxiosInstance(options: CreateAxiosDefaults): AxiosInstance {\r\n        let instance = axios.create(options);\r\n        instance.interceptors.response = axios.interceptors.response;\r\n        instance.interceptors.request = axios.interceptors.request;\r\n        console.log(\"axios instance created\")\r\n        return instance;\r\n    }\r\n}","export type Response = (IResponse | IPageableQueryResponse | any);\r\n\r\nexport interface IResponse {\r\n    success: boolean\r\n    result?: string | null\r\n    data?: Array<any> | any\r\n    errors?: Array<any>\r\n    messages?: Array<any>\r\n    extendedData?: any\r\n    status?: any\r\n    exception?: any\r\n    progressEvent?: { total?: number, loaded?: number, progress: number, uploaded?: number } | any\r\n}\r\n\r\nexport interface IPageableQueryResponse extends IResponse {\r\n    page?: number;\r\n    size?: number;\r\n    total?: number;\r\n}\r\n\r\nexport class DefaultResponse implements IResponse {\r\n    success: boolean = false;\r\n    data = null;\r\n    errors = [];\r\n    exception = null;\r\n    extendedData = null;\r\n    messages = [];\r\n    result = null;\r\n    status = null;\r\n    progressEvent = {progress: 0};\r\n}\r\n\r\nexport class DefaultPageableQueryResponse extends DefaultResponse implements IPageableQueryResponse {\r\n    status = null;\r\n    total = 0;\r\n    progressEvent = {progress: 0};\r\n}\r\n","import {isObject, merge} from \"@bianmaba/utils\";\r\n\r\nexport const mergeDataOrParams = (src: FormData | URLSearchParams | any, target: FormData | URLSearchParams | any) => {\r\n    target = target || {};\r\n    src = src || {}\r\n    //克隆目标数据\r\n    let coped = target;\r\n    if (target instanceof FormData) {\r\n        target = target as FormData;\r\n        coped = new FormData();\r\n        target.forEach((val: FormDataEntryValue, key: string) => {\r\n            coped.append(key, val)\r\n        })\r\n    } else if (target instanceof URLSearchParams) {\r\n        target = target as URLSearchParams;\r\n        coped = new URLSearchParams();\r\n        target.forEach((val: FormDataEntryValue, key: string) => {\r\n            coped.append(key, val)\r\n        })\r\n    } else if (isObject(target)) {\r\n        coped = merge(target, {})\r\n    }\r\n    //复制原数据到克隆数据\r\n    if (coped instanceof FormData || coped instanceof URLSearchParams || isObject(coped)) {\r\n        if (src instanceof FormData) {\r\n            src.forEach((val: FormDataEntryValue, key: string) => {\r\n                if (coped instanceof FormData || coped instanceof URLSearchParams) {\r\n                    coped.append(key, val)\r\n                } else {\r\n                    coped[key] = val\r\n                }\r\n            })\r\n        } else if (src instanceof URLSearchParams) {\r\n            src.forEach((val, key) => {\r\n                if (coped instanceof FormData || coped instanceof URLSearchParams) {\r\n                    coped.append(key, val)\r\n                } else {\r\n                    coped[key] = val\r\n                }\r\n            })\r\n        } else if (isObject(src)) {\r\n            let keys = Object.keys(src) as []\r\n            if (coped instanceof FormData || coped instanceof URLSearchParams) {\r\n                keys.forEach(key => {\r\n                    coped.append(key, src[key])\r\n                })\r\n            } else {\r\n                return merge(coped, src);\r\n            }\r\n        }\r\n    }\r\n\r\n    //返回克降数据\r\n    return coped;\r\n}","\"use strict\";\r\nimport {AxiosInstance, AxiosRequestConfig, AxiosResponse} from \"axios\";\r\nimport {isArray, isObject, merge} from \"@bianmaba/utils\";\r\nimport {HttpContentType, RequestData, RequestParams} from \"./request/Request\";\r\nimport {DefaultResponse, Response} from \"./response/Response\";\r\nimport GetExecutor from \"./GetExecutor\";\r\nimport PostExecutor from \"./PostExecutor\";\r\nimport {mergeDataOrParams} from \"../utils/utils\";\r\n\r\nexport type ExecutorType = (Executor | GetExecutor | PostExecutor | any)\r\n\r\nexport default class Executor {\r\n    public controller: AbortController = new AbortController()\r\n    public instance: AxiosInstance;\r\n    public url: string = '';\r\n    public loading: boolean = false;\r\n    public response: Response = new DefaultResponse();\r\n    public data: RequestData = {}\r\n    public params: RequestParams = {}\r\n    public defaultResponse: Response = new DefaultResponse();\r\n\r\n    constructor(instance: AxiosInstance, url?: string) {\r\n\r\n        this.instance = instance;\r\n        this.url = url || this.url;\r\n    }\r\n\r\n    public abort() {\r\n        this.controller.abort({success: false, result: '请求操作已被用户取消！'})\r\n    }\r\n\r\n    public initOptions(options: AxiosRequestConfig<any> | any = {}) {\r\n        options.signal = this.controller.signal;\r\n        if (options.onDownloadProgress) {\r\n            options._onDownloadProgress = options.onDownloadProgress\r\n            options.onDownloadProgress = (e: any) => {\r\n                this.data.progressEvent = e;\r\n                options._onDownloadProgress(e)\r\n            };\r\n        }\r\n        if (options.onUploadProgress) {\r\n            options._onUploadProgress = options.onUploadProgress\r\n            options.onUploadProgress = (e: any) => {\r\n                this.data.progressEvent = e;\r\n                options._onUploadProgress(e)\r\n            };\r\n        }\r\n    }\r\n\r\n    public execute(options: AxiosRequestConfig<any> | any = {}): Promise<Response> {\r\n        return new Promise((resolve, reject) => {\r\n            console.log('Executor', this.data)\r\n            console.log('Executor', this.response)\r\n            this.loading = true;\r\n            options.data = mergeDataOrParams(this.data, options.data);\r\n            options.params = mergeDataOrParams(this.params, options.params);\r\n            options.url = options.url ? options.url : this.url;\r\n            this.initOptions(options)\r\n            this.setDefaultResponse(this.defaultResponse)\r\n            this.instance.request(options).then((resp: AxiosResponse<any>) => {\r\n                try {\r\n                    this.handleThenResponse(resolve, resp);\r\n                } finally {\r\n                    this.loading = false;\r\n                }\r\n            }).catch((e) => {\r\n                try {\r\n                    this.handleCatchResponse(reject, e);\r\n                } finally {\r\n                    this.loading = false;\r\n                }\r\n            });\r\n        })\r\n    }\r\n\r\n\r\n    /**\r\n     * 将执行器请求方式设置为：application/json\r\n     */\r\n    public toJsonRequest(): ExecutorType {\r\n        this.instance.defaults.headers['Content-Type'] = HttpContentType[\"application/json\"]\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 将执行器请求方式设置为：application/x-www-form-urlencoded\r\n     */\r\n    public toFormRequest(): ExecutorType {\r\n        this.instance.defaults.headers['Content-Type'] = HttpContentType[\"application/x-www-form-urlencoded\"]\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 将执行器请求方式设置为：multipart/form-data\r\n     */\r\n    public toFormDataRequest(): ExecutorType {\r\n        this.instance.defaults.headers['Content-Type'] = HttpContentType[\"multipart/form-data\"]\r\n        return this;\r\n    }\r\n\r\n    public setDefaultResponse(defaultResponse: Response = new DefaultResponse()): ExecutorType {\r\n        this.response = defaultResponse;\r\n        this.defaultResponse = JSON.parse(JSON.stringify(defaultResponse));\r\n        return this;\r\n    }\r\n\r\n    public setDefaultRequestData(defaultRequestData: RequestData = {}): ExecutorType {\r\n        this.data = merge(this.data, defaultRequestData);\r\n        return this;\r\n    }\r\n\r\n    public setDefaultResultParams(defaultResultParams: RequestParams = {}): ExecutorType {\r\n        this.params = merge(this.params, defaultResultParams);\r\n        return this;\r\n    }\r\n\r\n\r\n    public handleThenResponse(resolve: (value: any) => void, resp: AxiosResponse<any>) {\r\n        console.log('PostExecutor', this.data)\r\n        console.log('PostExecutor', this.response)\r\n\r\n        this.response = resp.data;\r\n        resolve(resp.data)\r\n    }\r\n\r\n    public handleCatchResponse(reject: (reason?: any) => void, e: any) {\r\n        console.error('远程请求发生异常：', e)\r\n        if (e.response) {\r\n            this.response = e.response.data;\r\n            reject(e.response.data)\r\n        } else {\r\n            let result = {success: false, result: '远程请求发生异常！', data: null};\r\n            this.response = result;\r\n\r\n            reject(result)\r\n        }\r\n    }\r\n}","\"use strict\";\r\nimport Executor from \"./Executor\";\r\nimport {AxiosInstance, AxiosRequestConfig} from \"axios\";\r\nimport {merge} from \"@bianmaba/utils\";\r\nimport {Response} from \"./response/Response\";\r\nimport {mergeDataOrParams} from \"../utils/utils\";\r\n\r\nexport default class GetExecutor extends Executor {\r\n    constructor(instance: AxiosInstance, url?: string) {\r\n        super(instance, url);\r\n    }\r\n\r\n    public execute(params: any = {}, options: AxiosRequestConfig<any> | any = {}): Promise<Response> {\r\n        this.loading = true;\r\n        options.params = mergeDataOrParams(this.params, mergeDataOrParams(options.params, params));\r\n        this.initOptions(options)\r\n        this.setDefaultResponse(this.defaultResponse)\r\n        return new Promise((resolve, reject) => {\r\n            this.instance.get(options.url || this.url, options).then((resp) => {\r\n                try {\r\n                    this.handleThenResponse(resolve, resp);\r\n                } finally {\r\n                    this.loading = false;\r\n                }\r\n            }).catch(e => {\r\n                try {\r\n                    this.handleCatchResponse(reject, e);\r\n                } finally {\r\n                    this.loading = false;\r\n                }\r\n            });\r\n        })\r\n    }\r\n}\r\n\r\n","\"use strict\";\r\nimport Executor from \"./Executor\";\r\nimport {AxiosInstance, AxiosRequestConfig} from \"axios\";\r\nimport {isArray, isObject, merge} from \"@bianmaba/utils\";\r\nimport {RequestData, RequestParams} from \"./request/Request\";\r\nimport {Response} from \"./response/Response\";\r\nimport {mergeDataOrParams} from \"../utils/utils\";\r\nimport {AxiosResponse} from \"axios/index\";\r\n\r\nexport default class PostExecutor extends Executor {\r\n    constructor(instance: AxiosInstance, url?: string) {\r\n        super(instance, url);\r\n    }\r\n\r\n    public execute(data: RequestData | null = {}, params: RequestParams = {}, options: AxiosRequestConfig<any> | any = {}): Promise<Response> {\r\n\r\n        this.loading = false;\r\n        data = merge(JSON.parse(JSON.stringify(this.data)), options.data, data);\r\n\r\n        console.log('st PostExecutor', data)\r\n        console.log('st PostExecutor', this.data)\r\n        options.params = mergeDataOrParams(this.params, mergeDataOrParams(options.params, params));\r\n        this.initOptions(options)\r\n        this.setDefaultResponse(this.defaultResponse)\r\n        return new Promise((resolve, reject) => {\r\n            //this.response = {total: 100, page: 1, data: []}\r\n            this.instance.post(options.url || this.url, data, options).then((resp) => {\r\n                try {\r\n                    console.log('PostExecutor', this.data)\r\n                    console.log('PostExecutor', this.response)\r\n                    this.handleThenResponse(resolve, resp);\r\n                } finally {\r\n                    this.loading = false;\r\n                }\r\n            }).catch(e => {\r\n                try {\r\n                    this.handleCatchResponse(reject, e);\r\n                } finally {\r\n                    this.loading = false;\r\n                }\r\n            })\r\n        })\r\n    }\r\n\r\n    public handleThenResponse(resolve: (value: any) => void, resp: AxiosResponse<any>) {\r\n        console.log('PostExecutor', this.data)\r\n        console.log('PostExecutor', this.response)\r\n\r\n        this.response = resp.data;\r\n        resolve(resp.data)\r\n    }\r\n}","\"use strict\";\r\nimport {AxiosInstance} from \"axios\";\r\nimport PostExecutor from \"./PostExecutor\";\r\nimport {DefaultResponse} from \"./response/Response\";\r\n\r\nexport default class QueryExecutor extends PostExecutor {\r\n    constructor(instance: AxiosInstance, url?: string) {\r\n        super(instance, url);\r\n        this.setDefaultResponse(new DefaultResponse())\r\n    }\r\n}","\"use strict\";\r\nimport {AxiosInstance} from \"axios\";\r\nimport QueryExecutor from \"./QueryExecutor\";\r\nimport {DefaultPageableQueryResponse, Response} from \"./response/Response\";\r\n\r\nexport default class PageableQueryExecutor extends QueryExecutor {\r\n    constructor(instance: AxiosInstance, url?: string) {\r\n        super(instance, url);\r\n        this.setDefaultResponse(new DefaultPageableQueryResponse())\r\n    }\r\n}","import AbstractHttpClient from \"./AbstractHttpClient\";\r\nimport {CreateAxiosDefaults} from \"axios\";\r\nimport Executor from \"../executors/Executor\";\r\nimport GetExecutor from \"../executors/GetExecutor\";\r\nimport PostExecutor from \"../executors/PostExecutor\";\r\n\r\nimport {reactive} from \"vue\";\r\nimport {merge} from \"@bianmaba/utils\";\r\nimport {\r\n    DefaultPageableQueryRequestData,\r\n    DefaultQueryRequestData,\r\n    HttpContentType,\r\n    HttpMethod,\r\n    RequestData,\r\n    RequestParams\r\n} from \"../executors/request/Request\";\r\nimport QueryExecutor from \"../executors/QueryExecutor\";\r\nimport PageableQueryExecutor from \"../executors/PageableQueryExecutor\";\r\n\r\nexport default class HttpClient extends AbstractHttpClient {\r\n    private static instance: HttpClient | any;\r\n\r\n    constructor(options: CreateAxiosDefaults = {}) {\r\n        super(options)\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param options  axios实例配置选项，此选项中的data及params不会生效\r\n     */\r\n    public createRequestExecutor(url: string = '', options: CreateAxiosDefaults<any> | any = {}): Executor {\r\n        let axiosInstance = this.createAxiosInstance(options);\r\n        return reactive(new Executor(axiosInstance, url));\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param options  axios实例配置选项，此选项中的data及params不会生效\r\n     */\r\n    public createGetExecutor(url: string = '', options: CreateAxiosDefaults<any> | any = {}): GetExecutor {\r\n        let _options = merge({\r\n            method: HttpMethod.GET,\r\n            data: null,\r\n            params: null,\r\n            headers: {'Content-Type': HttpContentType[\"application/x-www-form-urlencoded\"]}\r\n        }, options);\r\n        let axiosInstance = this.createAxiosInstance(_options);\r\n        return reactive(new GetExecutor(axiosInstance, url));\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param options  axios实例配置选项，此选项中的data及params不会生效\r\n     */\r\n    public createQueryExecutor(url: string = '', options: CreateAxiosDefaults<any> | any = {}): GetExecutor {\r\n        let _options = merge({\r\n            method: HttpMethod.GET,\r\n            data: null,\r\n            params: null,\r\n            headers: {'Content-Type': HttpContentType[\"application/x-www-form-urlencoded\"]}\r\n        }, options);\r\n        let axiosInstance = this.createAxiosInstance(_options);\r\n        return reactive(new QueryExecutor(axiosInstance, url).setDefaultResponse({data: []}).setDefaultRequestData(new DefaultQueryRequestData()));\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param options  axios实例配置选项，此选项中的data及params不会生效\r\n     */\r\n    public createPageableQueryExecutor(url: string = '', options: CreateAxiosDefaults<any> | any = {}): GetExecutor {\r\n        let _options = merge({\r\n            method: HttpMethod.GET,\r\n            data: null,\r\n            params: null,\r\n            headers: {'Content-Type': HttpContentType[\"application/x-www-form-urlencoded\"]}\r\n        }, options);\r\n        let axiosInstance = this.createAxiosInstance(_options);\r\n        return reactive(new PageableQueryExecutor(axiosInstance, url).setDefaultResponse({data: []}).setDefaultRequestData(new DefaultPageableQueryRequestData()));\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param options  axios实例配置选项，此选项中的data及params不会生效\r\n     */\r\n    public createPostExecutor(url: string = '', options: CreateAxiosDefaults<any> | any = {}): PostExecutor {\r\n        let _options = merge({\r\n            method: HttpMethod.POST,\r\n            data: null,\r\n            params: null,\r\n            headers: {'Content-Type': HttpContentType[\"multipart/form-data\"]}\r\n        }, options);\r\n        let axiosInstance = this.createAxiosInstance(_options);\r\n        return reactive(new PostExecutor(axiosInstance, url));\r\n    }\r\n\r\n    /**\r\n     * 获取HttpClient实例（单例模式），首将获取时会根据参数初始化实例，后续再获取时参数将不会生效，而是直接返回已经存在的实例\r\n     * @param options\r\n     */\r\n    public static getInstance(options?: CreateAxiosDefaults | any): HttpClient {\r\n        if (!this.instance) {\r\n            this.instance = new HttpClient(options);\r\n        } else {\r\n            if (options) {\r\n                console.error('实例已经存在，重获取实例时，配置选项将不会生效！')\r\n            }\r\n        }\r\n        return this.instance;\r\n    }\r\n\r\n    public static post(): PostMethod {\r\n        return {\r\n            do(url: string, data: RequestData = {}, params: RequestParams = {}, options: CreateAxiosDefaults = {}) {\r\n                return HttpClient.getInstance().createPostExecutor(url, options).execute(data, params, options)\r\n            },\r\n            multipartFormData(url: string, data: RequestData = {}, params: RequestParams = {}, options: CreateAxiosDefaults = {}) {\r\n                return HttpClient.getInstance().createPostExecutor(url, options).toFormDataRequest().execute(data, params, options)\r\n            },\r\n            form(url: string, data: RequestData = {}, params: RequestParams = {}, options: CreateAxiosDefaults = {}) {\r\n                return HttpClient.getInstance().createPostExecutor(url, options).toFormRequest().execute(data, params, options)\r\n            },\r\n            json(url: string, data: RequestData = {}, params: RequestParams = {}, options: CreateAxiosDefaults = {}) {\r\n                return HttpClient.getInstance().createPostExecutor(url, options).toJsonRequest().execute(data, params, options)\r\n            }\r\n        } as PostMethod\r\n    }\r\n\r\n    public static get(): GetMethods {\r\n        return {\r\n            do(url: string, params: RequestParams = {}, options: CreateAxiosDefaults = {}) {\r\n                return HttpClient.getInstance().createGetExecutor(url, options).execute(params, options)\r\n            }\r\n        } as GetMethods\r\n    }\r\n}\r\n\r\nexport interface GetMethods {\r\n    do: Function;\r\n}\r\n\r\nexport interface PostMethod {\r\n    do: Function;\r\n    multipartFormData: Function;\r\n    form: Function;\r\n    json: Function;\r\n}"],"names":["p","$","r","o","a","m","c","y","n","u","i","I","ut","DefaultQueryRequestData","__publicField","Order","DefaultPageableQueryRequestData","page","size","pageOffset","Join","property","joinType","on","direction","Condition","value","opt","condition","EOrderDirection","EConditionOpt","HttpContentType","HttpMethod","AbstractHttpClient","options","axios","merge","instance","DefaultResponse","DefaultPageableQueryResponse","mergeDataOrParams","src","target","coped","val","key","isObject","keys","Executor","url","e","resolve","reject","resp","defaultResponse","defaultRequestData","defaultResultParams","result","GetExecutor","params","PostExecutor","data","QueryExecutor","PageableQueryExecutor","_HttpClient","axiosInstance","reactive","_options","HttpClient"],"mappings":"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"}