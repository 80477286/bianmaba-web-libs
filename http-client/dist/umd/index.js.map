{"version":3,"file":"index.js","sources":["../../src/client/AbstractHttpClient.ts","../../../utils/dist/es/index.js","../../src/executors/request/Request.ts","../../src/executors/response/Response.ts","../../src/utils/utils.ts","../../src/executors/Executor.ts","../../src/executors/GetExecutor.ts","../../src/executors/PostExecutor.ts","../../src/executors/QueryExecutor.ts","../../src/executors/PageableQueryExecutor.ts","../../src/client/HttpClient.ts"],"sourcesContent":["import {AxiosInstance, CreateAxiosDefaults, default as axios} from \"axios\";\r\n\r\n\r\nexport default class AbstractHttpClient {\r\n    public defaultAxiosInstance: AxiosInstance = axios.create();\r\n\r\n    constructor(options: CreateAxiosDefaults | any = {}) {\r\n        this.defaultAxiosInstance = axios.create(options || {})\r\n        this.defaultAxiosInstance.interceptors.response = axios.interceptors.response;\r\n        this.defaultAxiosInstance.interceptors.request = axios.interceptors.request;\r\n    }\r\n}","const p = Object.prototype.toString, $ = ((t) => (e) => {\n  let r = p.call(e);\n  return t[r] || (t[r] = r.slice(8, -1).toLowerCase());\n})(/* @__PURE__ */ Object.create(null)), o = (t) => (t = t.toLowerCase(), function(r) {\n  return $(r) === t;\n}), C = (t, e) => function() {\n  return t.apply(e, arguments);\n}, a = (t) => Array.isArray(t), f = (t) => typeof t > \"u\", B = (t) => t !== null && !f(t) && t.constructor !== null && !f(t.constructor) && typeof t.constructor.isBuffer == \"function\" && t.constructor.isBuffer(t), d = o(\"ArrayBuffer\"), A = (t) => {\n  let e;\n  return typeof ArrayBuffer < \"u\" && ArrayBuffer.isView ? e = ArrayBuffer.isView(t) : e = t && t.buffer && d(t.buffer), e;\n}, O = (t) => typeof t == \"string\", W = (t) => typeof t == \"boolean\", F = (t) => typeof t == \"number\" && isFinite(t), m = (t) => t != null && typeof t == \"object\" && Array.isArray(t) === !1, c = (t) => {\n  if ($(t) !== \"object\")\n    return !1;\n  let e = Object.getPrototypeOf(t);\n  return e === null || e === Object.prototype;\n}, S = o(\"Date\"), w = o(\"File\"), b = o(\"Blob\"), h = o(\"FileList\"), l = (t) => p.call(t) === \"[object Function]\", P = (t) => m(t) && l(t.pipe), D = (t) => {\n  let e = \"[object FormData]\";\n  return t && (typeof FormData == \"function\" && t instanceof FormData || p.call(t) === e || l(t.toString) && t.toString() === e);\n}, L = o(\"URLSearchParams\"), U = (t) => t.trim ? t.trim() : t.replace(/^\\s+|\\s+$/g, \"\"), N = () => typeof navigator < \"u\" && (navigator.product === \"ReactNative\" || navigator.product === \"NativeScript\" || navigator.product === \"NS\") ? !1 : typeof window < \"u\" && typeof document < \"u\", y = (t, e) => {\n  if (!(t === null || typeof t > \"u\"))\n    if (typeof t != \"object\" && (t = [t]), a(t))\n      for (let r = 0, n = t.length; r < n; r++)\n        e.call(null, t[r], r, t);\n    else\n      for (let r in t)\n        Object.prototype.hasOwnProperty.call(t, r) && e.call(null, t[r], r, t);\n}, V = (t, e, r) => (y(e, function(i, s) {\n  r && typeof i == \"function\" ? t[s] = C(i, r) : t[s] = i;\n}), t), x = (t) => (t.charCodeAt(0) === 65279 && (t = t.slice(1)), t), E = (t, e, r, n) => {\n  t.prototype = Object.create(e.prototype, n), t.prototype.constructor = t, r && Object.assign(t.prototype, r);\n}, j = (t, e, r) => {\n  let n, i, s, g = {};\n  e = e || {};\n  do {\n    for (n = Object.getOwnPropertyNames(t), i = n.length; i-- > 0; )\n      s = n[i], g[s] || (e[s] = t[s], g[s] = !0);\n    t = Object.getPrototypeOf(t);\n  } while (t && (!r || r(t, e)) && t !== Object.prototype);\n  return e;\n}, R = (t, e, r) => {\n  t = String(t), (r === void 0 || r > t.length) && (r = t.length), r -= e.length;\n  let n = t.indexOf(e, r);\n  return n !== -1 && n === r;\n}, T = (t) => {\n  if (!t)\n    return null;\n  let e = t.length;\n  if (f(e))\n    return null;\n  let r = new Array(e);\n  for (; e-- > 0; )\n    r[e] = t[e];\n  return r;\n}, M = function(t) {\n  return function(e) {\n    return t && e instanceof t;\n  };\n}(typeof Uint8Array < \"u\" && Object.getPrototypeOf(Uint8Array)), _ = (t = 1e3) => new Promise((e) => {\n  setTimeout(e, t);\n}), u = function(...t) {\n  let e = arguments[0], r = (n, i) => {\n    c(e[i]) && c(n) ? e[i] = u(e[i], n) : c(n) ? e[i] = u({}, n) : a(n) ? e[i] = n.slice() : e[i] = n;\n  };\n  for (let n = 0, i = arguments.length; n < i; n++)\n    y(arguments[n], r);\n  return e;\n}, z = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({\n  __proto__: null,\n  delay: _,\n  endsWith: R,\n  extend: V,\n  forEach: y,\n  inherits: E,\n  isArray: a,\n  isArrayBuffer: d,\n  isArrayBufferView: A,\n  isBlob: b,\n  isBoolean: W,\n  isBuffer: B,\n  isDate: S,\n  isFile: w,\n  isFileList: h,\n  isFormData: D,\n  isFunction: l,\n  isNumber: F,\n  isObject: m,\n  isPlainObject: c,\n  isStandardBrowserEnv: N,\n  isStream: P,\n  isString: O,\n  isTypedArray: M,\n  isURLSearchParams: L,\n  isUndefined: f,\n  merge: u,\n  stripBOM: x,\n  toArray: T,\n  toFlatObject: j,\n  trim: U\n}, Symbol.toStringTag, { value: \"Module\" })), I = u, K = _, q = M, G = T, H = R, J = j, Q = E, X = x, Y = V, Z = y, k = N, v = U, tt = L, et = D, rt = P, nt = l, it = h, st = b, ot = w, ct = S, ft = c, ut = m, at = F, lt = O, yt = A, pt = d, dt = B, mt = f, gt = a;\nexport {\n  z as default,\n  K as delay,\n  H as endsWith,\n  Y as extend,\n  Z as forEach,\n  Q as inherits,\n  gt as isArray,\n  pt as isArrayBuffer,\n  yt as isArrayBufferView,\n  st as isBlob,\n  dt as isBuffer,\n  ct as isDate,\n  ot as isFile,\n  it as isFileList,\n  et as isFormData,\n  nt as isFunction,\n  at as isNumber,\n  ut as isObject,\n  ft as isPlainObject,\n  k as isStandardBrowserEnv,\n  rt as isStream,\n  lt as isString,\n  q as isTypedArray,\n  tt as isURLSearchParams,\n  mt as isUndefined,\n  I as merge,\n  X as stripBOM,\n  G as toArray,\n  J as toFlatObject,\n  v as trim\n};\n//# sourceMappingURL=index.js.map\n","export type RequestData = (DefaultQueryRequestData | DefaultPageableQueryRequestData | any);\r\nexport type RequestParams = any;\r\n\r\nexport interface IQueryRequestData {\r\n    query?: string | null\r\n    idProperty?: string | null\r\n    order?: Order\r\n    condition?: Condition\r\n    sorts?: Array<Order>\r\n    queryProperties?: Array<string>\r\n    excludeIds?: Array<string>\r\n    joins?: Array<Join> | Array<any>\r\n    fetches?: Array<Join> | Array<any>\r\n}\r\n\r\nexport interface IPageableQueryRequestData extends IQueryRequestData {\r\n    size: number\r\n    page: number\r\n    pageOffset?: number\r\n}\r\n\r\nexport class DefaultQueryRequestData implements IQueryRequestData {\r\n    order = new Order(\"id\", 'ascending')\r\n    queryProperties = ['id']\r\n}\r\n\r\nexport class DefaultPageableQueryRequestData extends DefaultQueryRequestData implements IPageableQueryRequestData {\r\n    size: number = 10\r\n    page: number = 1\r\n    pageOffset: number = -1\r\n\r\n    constructor(page: number = 1, size: number = 10, pageOffset: number = -1) {\r\n        super();\r\n        this.page = page;\r\n        this.size = size;\r\n        this.pageOffset = pageOffset;\r\n    }\r\n\r\n    setSize(size: number) {\r\n        this.size = size;\r\n    }\r\n\r\n    setPage(page: number) {\r\n        this.page = page;\r\n    }\r\n\r\n    setPageOffset(pageOffset: number) {\r\n        this.pageOffset = pageOffset;\r\n    }\r\n}\r\n\r\nexport class Join {\r\n    constructor(property?: string, joinType?: string, on?: Array<Condition>) {\r\n        this.property = property || this.property;\r\n        this.joinType = joinType || this.joinType;\r\n        this.on = on || this.on;\r\n    }\r\n\r\n    property: string | null = null\r\n    joinType: string | null = null\r\n    on: Array<Condition> | null = null\r\n\r\n    of(property: string, joinType: string, on: Array<Condition>) {\r\n        return new Join(property, joinType, on);\r\n    }\r\n}\r\n\r\n\r\nexport class Order {\r\n    prop?: string | null = null\r\n    order?: OrderDirection = 'ascending'\r\n\r\n    constructor(prop?: string, order?: OrderDirection) {\r\n        this.prop = prop\r\n        this.order = order;\r\n    }\r\n\r\n    of(prop: string, order: OrderDirection = EOrderDirection.Asc) {\r\n        return new Order(prop, order);\r\n    }\r\n}\r\n\r\n\r\nexport class Condition {\r\n    property?: string | null = null\r\n    value?: number | boolean | string | null | '' | Array<number | boolean | string> = null\r\n    opt: ConditionOpt = 'eq'\r\n    and: Array<Condition> = []\r\n    or: Array<Condition> = []\r\n\r\n    constructor(property?: string | null, value?: number | boolean | string | null | '' | Array<number | boolean | string>, opt?: ConditionOpt | null) {\r\n        this.property = property || this.property;\r\n        this.value = value || this.value;\r\n        this.opt = opt || this.opt;\r\n    }\r\n\r\n    addAnd(condition: Condition) {\r\n        this.and.push(condition);\r\n    }\r\n\r\n    addOr(condition: Condition) {\r\n        this.or.push(condition);\r\n    }\r\n}\r\n\r\nexport type ConditionOpt =\r\n    EConditionOpt\r\n    | 'equals'\r\n    | 'eq'\r\n    | 'ge'\r\n    | 'gt'\r\n    | 'lt'\r\n    | 'le'\r\n    | 'ne'\r\n    | 'notlike'\r\n    | 'like'\r\n    | 'like:'\r\n    | ':like'\r\n    | ':like:'\r\n    | 'lk'\r\n    | 'lk:'\r\n    | ':lk'\r\n    | ':lk:'\r\n    | 'between'\r\n    | 'btw'\r\n    | 'isnull'\r\n    | 'isnotnull'\r\n    | 'isempty'\r\n    | 'isnotempty'\r\n    | 'in'\r\n    | 'notin';\r\nexport type OrderDirection = EOrderDirection | 'asc' | 'desc' | 'descending' | 'ascending';\r\n\r\nexport enum EOrderDirection {\r\n    Asc = 'asc',\r\n    Desc = 'desc'\r\n}\r\n\r\nexport enum EConditionOpt {\r\n    equals = 'equals',\r\n    eq = 'eq',\r\n    ge = 'ge',\r\n    gt = 'gt',\r\n    lt = 'lt',\r\n    le = 'le',\r\n    ne = 'ne',\r\n    notlike = 'notlike',\r\n    like = 'like',\r\n    'like:' = 'like:',\r\n    ':like' = ':like',\r\n    ':like:' = ':like:',\r\n    'lk' = 'like',\r\n    'lk:' = 'like:',\r\n    ':lk' = ':like',\r\n    ':lk:' = ':like:',\r\n    between = 'between',\r\n    btw = 'btw',\r\n    isnull = 'isnull',\r\n    isnotnull = 'isnotnull',\r\n    isempty = 'isempty',\r\n    isnotempty = 'isnotempty',\r\n    in = 'in',\r\n    notin = 'notin'\r\n}\r\n\r\nexport enum HttpContentType {\r\n    'application/atom+xml' = 'application/atom+xml',\r\n    'application/json' = 'application/json',\r\n    'application/x-www-form-urlencoded' = 'application/x-www-form-urlencoded',\r\n    'application/xml' = 'application/xml',\r\n    'multipart/form-data' = 'multipart/form-data',\r\n    'text/html' = 'text/html',\r\n    'text/plain' = 'text/plain'\r\n}\r\n\r\nexport enum HttpMethod {\r\n    POST = 'POST',\r\n    GET = 'GET',\r\n    DELETE = 'DELETE',\r\n    HEAD = 'HEAD',\r\n    OPTIONS = 'OPTIONS',\r\n    PUT = 'PUT',\r\n    PATCH = 'PATCH',\r\n    PURGE = 'PURGE',\r\n    LINK = 'LINK',\r\n    UNLINK = 'UNLINK'\r\n}","export type Response = (IResponse | IPageableQueryResponse | any);\r\n\r\nexport interface IResponse {\r\n    success: boolean\r\n    result?: string | null\r\n    data?: Array<any> | any | null\r\n    errors?: Array<any>\r\n    messages?: Array<any>\r\n    extendedData?: any\r\n    status?: any\r\n    exception?: any\r\n    progressEvent?: { total?: number, loaded?: number, progress: number, uploaded?: number } | any\r\n}\r\n\r\nexport interface IPageableQueryResponse extends IResponse {\r\n    page?: number;\r\n    size?: number;\r\n    total?: number;\r\n    pageOffset?: number;\r\n}\r\n\r\nexport class DefaultResponse implements IResponse {\r\n    success: boolean = false;\r\n    data = null;\r\n    errors = [];\r\n    exception = null;\r\n    extendedData = null;\r\n    messages = [];\r\n    result = null;\r\n    status = null;\r\n    progressEvent = {progress: 0};\r\n}\r\n\r\nexport class DefaultQueryResponse extends DefaultResponse {\r\n    data = [] as any;\r\n}\r\n\r\n\r\nexport class DefaultPageableQueryResponse extends DefaultQueryResponse implements IPageableQueryResponse {\r\n    status = null;\r\n    total = 0;\r\n}\r\n","import {isArray, isObject, merge} from \"@bianmaba/utils\";\r\n\r\n/**\r\n * 只会对数组，对你，FormData,URLSearchParams的类型创建新对像\r\n * @param target\r\n */\r\nconst instanceByTargetType = (target: any) => {\r\n    if (target instanceof FormData) {\r\n        return new FormData();\r\n    } else if (target instanceof URLSearchParams) {\r\n        return new URLSearchParams();\r\n    } else if (isArray(target)) {\r\n        return [];\r\n    } else if (isObject(target)) {\r\n        return {};\r\n    }\r\n    return target;\r\n}\r\n/**\r\n * 合并参数，最终返回参数类型为最后一个参数的类型,注如果最后一个参数是数组则直接返回\r\n * @param args\r\n */\r\nexport const mergeDataOrParams = (...args: any[]) => {\r\n    if (args.length <= 0) {\r\n        return null;\r\n    }\r\n    if (isArray(args[args.length - 1])) {\r\n        return args[args.length - 1];\r\n    }\r\n    //克隆目标数据\r\n    let coped = instanceByTargetType(args[args.length - 1]);\r\n    for (let i = 0; i < args.length; i++) {\r\n        let src = args[i] || {}\r\n        //复制原数据到克隆数据\r\n        if (coped instanceof FormData || coped instanceof URLSearchParams || isObject(coped)) {\r\n            if (src instanceof FormData) {\r\n                src.forEach((val: FormDataEntryValue, key: string) => {\r\n                    if (coped instanceof FormData || coped instanceof URLSearchParams) {\r\n                        coped.append(key, val)\r\n                    } else {\r\n                        coped[key] = val\r\n                    }\r\n                })\r\n            } else if (src instanceof URLSearchParams) {\r\n                src.forEach((val, key) => {\r\n                    if (coped instanceof FormData || coped instanceof URLSearchParams) {\r\n                        coped.append(key, val)\r\n                    } else {\r\n                        coped[key] = val\r\n                    }\r\n                })\r\n            } else if (isObject(src)) {\r\n                let keys = Object.keys(src) as []\r\n                if (coped instanceof FormData || coped instanceof URLSearchParams) {\r\n                    keys.forEach(key => {\r\n                        coped.append(key, src[key])\r\n                    })\r\n                } else {\r\n                    let cs = JSON.parse(JSON.stringify(src))\r\n                    keys.forEach(key => {\r\n                        coped[key] = cs[key]\r\n                    })\r\n                }\r\n            }\r\n        }\r\n    }\r\n    //返回克降数据\r\n    return coped;\r\n}","\"use strict\";\r\nimport {AxiosInstance, AxiosRequestConfig, AxiosResponse, CreateAxiosDefaults} from \"axios\";\r\nimport {merge} from \"@bianmaba/utils\";\r\nimport {HttpContentType, RequestData, RequestParams} from \"./request/Request\";\r\nimport {DefaultResponse, Response} from \"./response/Response\";\r\nimport GetExecutor from \"./GetExecutor\";\r\nimport PostExecutor from \"./PostExecutor\";\r\nimport {mergeDataOrParams} from \"../utils/utils\";\r\n\r\nexport type ExecutorType = (Executor | GetExecutor | PostExecutor | any)\r\n\r\nexport default class Executor {\r\n    public controller: AbortController = new AbortController()\r\n    public instance: AxiosInstance;\r\n    public options: AxiosRequestConfig = {};\r\n    public url: string = '';\r\n    public loading: boolean = false;\r\n    public data: RequestData = {}\r\n    public params: RequestParams = {}\r\n    public response: Response = new DefaultResponse();\r\n    public defaultResponse: Response = new DefaultResponse();\r\n    public defaultRequestParams: Response = {} as RequestData;\r\n    public defaultRequestData: Response = {} as RequestData;\r\n\r\n    constructor(instance: AxiosInstance, url?: string, options: AxiosRequestConfig = {}) {\r\n        this.instance = instance;\r\n        this.url = url || this.url;\r\n        this.options = options;\r\n    }\r\n\r\n    public abort() {\r\n        this.controller.abort({success: false, result: '请求操作已被用户取消！'})\r\n    }\r\n\r\n    public initOptions(options: AxiosRequestConfig<any> | any = {}) {\r\n        options.signal = this.controller.signal;\r\n        if (options.onDownloadProgress) {\r\n            options._onDownloadProgress = options.onDownloadProgress\r\n            options.onDownloadProgress = (e: any) => {\r\n                this.data.progressEvent = e;\r\n                options._onDownloadProgress(e)\r\n            };\r\n        }\r\n        if (options.onUploadProgress) {\r\n            options._onUploadProgress = options.onUploadProgress\r\n            options.onUploadProgress = (e: any) => {\r\n                this.data.progressEvent = e;\r\n                options._onUploadProgress(e)\r\n            };\r\n        }\r\n    }\r\n\r\n    public execute(options: AxiosRequestConfig<any> | any = {}): Promise<Response> {\r\n        return new Promise((resolve, reject) => {\r\n            this.loading = true;\r\n            options = merge({}, this.options || {}, options || {})\r\n            options.data = mergeDataOrParams(this.defaultRequestData, this.data, options.data);\r\n            options.params = options.params = mergeDataOrParams(this.defaultRequestParams, this.params, options.params);\r\n            options.url = options.url ? options.url : this.url;\r\n            this.initOptions(options)\r\n            this.response = JSON.parse(JSON.stringify(this.defaultResponse))\r\n            this.instance.request(options).then((resp: AxiosResponse<any>) => {\r\n                try {\r\n                    this.handleThenResponse(resolve, resp);\r\n                } finally {\r\n                    this.loading = false;\r\n                }\r\n            }).catch((e) => {\r\n                try {\r\n                    this.handleCatchResponse(reject, e);\r\n                } finally {\r\n                    this.loading = false;\r\n                }\r\n            });\r\n        })\r\n    }\r\n\r\n\r\n    /**\r\n     * 将执行器请求方式设置为：application/json\r\n     */\r\n    public toJsonRequest(): ExecutorType {\r\n        merge(this.options, {headers: {'Content-Type': HttpContentType[\"application/json\"]}})\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 将执行器请求方式设置为：application/x-www-form-urlencoded\r\n     */\r\n    public toFormRequest(): ExecutorType {\r\n        merge(this.options, {headers: {'Content-Type': HttpContentType[\"application/x-www-form-urlencoded\"]}})\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 将执行器请求方式设置为：multipart/form-data\r\n     */\r\n    public toFormDataRequest(): ExecutorType {\r\n        merge(this.options, {headers: {'Content-Type': HttpContentType[\"multipart/form-data\"]}})\r\n        return this;\r\n    }\r\n\r\n    public setDefaultResponse(defaultResponse: Response = {}): ExecutorType {\r\n        this.defaultResponse = defaultResponse;\r\n        this.response = JSON.parse(JSON.stringify(this.defaultResponse));\r\n        return this;\r\n    }\r\n\r\n    public mergeDefaultResponse(defaultResponse: Response = {}): ExecutorType {\r\n        this.defaultResponse = merge(this.defaultResponse, defaultResponse || {}, {});\r\n        this.response = JSON.parse(JSON.stringify(this.defaultResponse));\r\n        return this;\r\n    }\r\n\r\n    public setDefaultRequestData(defaultRequestData: RequestData = {}): ExecutorType {\r\n        this.defaultRequestData = defaultRequestData;\r\n        this.data = JSON.parse(JSON.stringify(this.defaultRequestData));\r\n        return this;\r\n    }\r\n\r\n    public mergeDefaultRequestData(defaultRequestData: RequestData = {}): ExecutorType {\r\n        merge(this.defaultRequestData, defaultRequestData || {});\r\n        this.data = JSON.parse(JSON.stringify(this.defaultRequestData));\r\n        return this;\r\n    }\r\n\r\n    public setDefaultResultParams(defaultResultParams: RequestParams = {}): ExecutorType {\r\n        this.defaultRequestParams = defaultResultParams;\r\n        this.params = JSON.parse(JSON.stringify(this.defaultRequestParams));\r\n        return this;\r\n    }\r\n\r\n    public handleThenResponse(resolve: (value: any) => void, resp: AxiosResponse<any>) {\r\n        this.response = merge({}, this.defaultResponse, resp.data);\r\n        if (this.response.total) {\r\n            this.data.total = this.response.total;\r\n        }\r\n        if (this.response.page) {\r\n            this.data.page = this.response?.page - (this.data.pageOffset || 0);\r\n        }\r\n        if (this.response.size) {\r\n            this.data.size = this.response.size;\r\n        }\r\n        resolve(this.response)\r\n    }\r\n\r\n\r\n    public handleCatchResponse(reject: (reason?: any) => void, e: any) {\r\n        console.error('远程请求发生异常：', e)\r\n        if (e.response) {\r\n            this.response = merge({}, this.defaultResponse, e.response.data);\r\n            reject(this.response)\r\n        } else {\r\n            let result = {success: false, result: '远程请求发生异常！'};\r\n            this.response = merge({}, this.defaultResponse, result);\r\n            reject(this.response)\r\n        }\r\n    }\r\n}","\"use strict\";\r\nimport Executor from \"./Executor\";\r\nimport {AxiosInstance, AxiosRequestConfig} from \"axios\";\r\nimport {merge} from \"@bianmaba/utils\";\r\nimport {Response} from \"./response/Response\";\r\nimport {mergeDataOrParams} from \"../utils/utils\";\r\n\r\nexport default class GetExecutor extends Executor {\r\n    constructor(instance: AxiosInstance, url?: string, options: AxiosRequestConfig = {}) {\r\n        super(instance, url, options);\r\n    }\r\n\r\n    public execute(params: any = {}, options: AxiosRequestConfig<any> | any = {}): Promise<Response> {\r\n        this.loading = true;\r\n        options = merge({}, this.options || {}, options || {})\r\n        options.params = mergeDataOrParams(this.defaultRequestParams, this.params, options.params, params);\r\n        this.initOptions(options)\r\n        this.response = JSON.parse(JSON.stringify(this.defaultResponse))\r\n        return new Promise((resolve, reject) => {\r\n            this.instance.get(options.url || this.url, options).then((resp) => {\r\n                try {\r\n                    this.handleThenResponse(resolve, resp);\r\n                } finally {\r\n                    this.loading = false;\r\n                }\r\n            }).catch(e => {\r\n                try {\r\n                    this.handleCatchResponse(reject, e);\r\n                } finally {\r\n                    this.loading = false;\r\n                }\r\n            });\r\n        })\r\n    }\r\n}\r\n\r\n","\"use strict\";\r\nimport Executor from \"./Executor\";\r\nimport {AxiosInstance, AxiosRequestConfig} from \"axios\";\r\nimport {isArray, isObject, merge} from \"@bianmaba/utils\";\r\nimport {DefaultQueryRequestData, RequestData, RequestParams} from \"./request/Request\";\r\nimport {DefaultPageableQueryResponse, Response} from \"./response/Response\";\r\nimport {mergeDataOrParams} from \"../utils/utils\";\r\n\r\nexport default class PostExecutor extends Executor {\r\n    constructor(instance: AxiosInstance, url?: string, options: AxiosRequestConfig = {}) {\r\n        super(instance, url, options);\r\n    }\r\n\r\n    public execute(data: RequestData | null = {}, params: RequestParams = {}, options: AxiosRequestConfig<any> | any = {}): Promise<Response> {\r\n        this.loading = true;\r\n        options = merge({},this.options || {}, options || {})\r\n        let rd = mergeDataOrParams(this.defaultRequestData, this.data, options.data, data);\r\n        options.params = mergeDataOrParams(this.defaultRequestParams, this.params, options.params, params);\r\n        this.initOptions(options)\r\n        this.response = JSON.parse(JSON.stringify(this.defaultResponse))\r\n        return new Promise((resolve, reject) => {\r\n            this.instance.post(options.url || this.url, rd, options).then((resp) => {\r\n                try {\r\n                    this.handleThenResponse(resolve, resp);\r\n                    resolve(resp.data)\r\n                } finally {\r\n                    this.loading = false;\r\n                }\r\n            }).catch(e => {\r\n                try {\r\n                    this.handleCatchResponse(reject, e);\r\n                } finally {\r\n                    this.loading = false;\r\n                }\r\n            })\r\n        })\r\n    }\r\n}","\"use strict\";\r\nimport {AxiosInstance, AxiosRequestConfig} from \"axios\";\r\nimport PostExecutor from \"./PostExecutor\";\r\nimport {DefaultQueryResponse, DefaultResponse} from \"./response/Response\";\r\nimport {DefaultQueryRequestData} from \"./request/Request\";\r\n\r\nexport default class QueryExecutor extends PostExecutor {\r\n    constructor(instance: AxiosInstance, url?: string, options: AxiosRequestConfig = {}) {\r\n        super(instance, url, options);\r\n        this.setDefaultResponse(new DefaultQueryResponse())\r\n        this.setDefaultRequestData(new DefaultQueryRequestData())\r\n    }\r\n}","\"use strict\";\r\nimport {AxiosInstance, AxiosRequestConfig} from \"axios\";\r\nimport QueryExecutor from \"./QueryExecutor\";\r\nimport {DefaultPageableQueryResponse, Response} from \"./response/Response\";\r\nimport {AxiosResponse} from \"axios/index\";\r\nimport {merge} from \"@bianmaba/utils\";\r\nimport {DefaultPageableQueryRequestData} from \"./request/Request\";\r\n\r\nexport default class PageableQueryExecutor extends QueryExecutor {\r\n    constructor(instance: AxiosInstance, url?: string, options: AxiosRequestConfig = {}) {\r\n        super(instance, url, options);\r\n        this.setDefaultResponse(new DefaultPageableQueryResponse())\r\n        this.setDefaultRequestData(new DefaultPageableQueryRequestData())\r\n    }\r\n}","import AbstractHttpClient from \"./AbstractHttpClient\";\r\nimport {CreateAxiosDefaults} from \"axios\";\r\nimport Executor from \"../executors/Executor\";\r\nimport GetExecutor from \"../executors/GetExecutor\";\r\nimport PostExecutor from \"../executors/PostExecutor\";\r\n\r\nimport {reactive} from \"vue\";\r\nimport {merge} from \"@bianmaba/utils\";\r\nimport {HttpContentType, HttpMethod, RequestData, RequestParams} from \"../executors/request/Request\";\r\nimport QueryExecutor from \"../executors/QueryExecutor\";\r\nimport PageableQueryExecutor from \"../executors/PageableQueryExecutor\";\r\n\r\nexport default class HttpClient extends AbstractHttpClient {\r\n    private static instance: HttpClient | any;\r\n\r\n    constructor(options: CreateAxiosDefaults | any = {}) {\r\n        super(options)\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param options  axios实例配置选项，此选项中的data及params不会生效\r\n     */\r\n    public createRequestExecutor(url: string = '', options: CreateAxiosDefaults<any> | any = {}): Executor {\r\n        return reactive(new Executor(this.defaultAxiosInstance, url, options));\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param options  axios实例配置选项，此选项中的data及params不会生效\r\n     */\r\n    public createGetExecutor(url: string = '', options: CreateAxiosDefaults<any> | any = {}): GetExecutor {\r\n        let _options = merge({\r\n            method: HttpMethod.GET,\r\n            headers: {'Content-Type': HttpContentType[\"application/x-www-form-urlencoded\"]}\r\n        }, options);\r\n        return reactive(new GetExecutor(this.defaultAxiosInstance, url, _options));\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param options  axios实例配置选项，此选项中的data及params不会生效\r\n     */\r\n    public createQueryExecutor(url: string = '', options: CreateAxiosDefaults<any> | any = {}): GetExecutor {\r\n        let _options = merge({\r\n            method: HttpMethod.POST,\r\n            headers: {'Content-Type': HttpContentType[\"application/json\"]}\r\n        }, options);\r\n        return reactive(new QueryExecutor(this.defaultAxiosInstance, url, _options));\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param options  axios实例配置选项，此选项中的data及params不会生效\r\n     */\r\n    public createPageableQueryExecutor(url: string = '', options: CreateAxiosDefaults<any> | any = {}): GetExecutor {\r\n        let _options = merge({\r\n            method: HttpMethod.POST,\r\n            headers: {'Content-Type': HttpContentType[\"application/json\"]}\r\n        }, options);\r\n        return reactive(new PageableQueryExecutor(this.defaultAxiosInstance, url, _options));\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param options  axios实例配置选项，此选项中的data及params不会生效\r\n     */\r\n    public createPostExecutor(url: string = '', options: CreateAxiosDefaults<any> | any = {}): PostExecutor {\r\n        let _options = merge({\r\n            method: HttpMethod.POST,\r\n            headers: {'Content-Type': HttpContentType[\"multipart/form-data\"]}\r\n        }, options);\r\n        return reactive(new PostExecutor(this.defaultAxiosInstance, url, _options));\r\n    }\r\n\r\n    /**\r\n     * 获取HttpClient实例（单例模式），首将获取时会根据参数初始化实例，后续再获取时参数将不会生效，而是直接返回已经存在的实例\r\n     * @param options\r\n     */\r\n    public static getInstance(options?: CreateAxiosDefaults | any): HttpClient {\r\n        if (!this.instance) {\r\n            this.instance = new HttpClient(options);\r\n        } else {\r\n            if (options) {\r\n                console.error('实例已经存在，重获取实例时，配置选项将不会生效！')\r\n            }\r\n        }\r\n        return this.instance;\r\n    }\r\n\r\n    public static post(): PostMethod {\r\n        return {\r\n            do(url: string, data: RequestData = {}, params: RequestParams = {}, options: CreateAxiosDefaults = {}) {\r\n                return HttpClient.getInstance().createPostExecutor(url, options).execute(data, params)\r\n            },\r\n            multipartFormData(url: string, data: RequestData = {}, params: RequestParams = {}, options: CreateAxiosDefaults = {}) {\r\n                return HttpClient.getInstance().createPostExecutor(url, options).toFormDataRequest().execute(data, params)\r\n            },\r\n            form(url: string, data: RequestData = {}, params: RequestParams = {}, options: CreateAxiosDefaults = {}) {\r\n                return HttpClient.getInstance().createPostExecutor(url, options).toFormRequest().execute(data, params)\r\n            },\r\n            json(url: string, data: RequestData = {}, params: RequestParams = {}, options: CreateAxiosDefaults = {}) {\r\n                return HttpClient.getInstance().createPostExecutor(url, options).toJsonRequest().execute(data, params)\r\n            }\r\n        } as PostMethod\r\n    }\r\n\r\n    public static get(): GetMethods {\r\n        return {\r\n            do(url: string, params: RequestParams = {}, options: CreateAxiosDefaults = {}) {\r\n                return HttpClient.getInstance().createGetExecutor(url, options).execute(params)\r\n            }\r\n        } as GetMethods\r\n    }\r\n}\r\n\r\nexport interface GetMethods {\r\n    do: Function;\r\n}\r\n\r\nexport interface PostMethod {\r\n    do: Function;\r\n    multipartFormData: Function;\r\n    form: Function;\r\n    json: Function;\r\n}"],"names":["AbstractHttpClient","options","__publicField","axios","p","$","r","o","a","m","c","y","n","u","i","I","ut","gt","DefaultQueryRequestData","Order","DefaultPageableQueryRequestData","page","size","pageOffset","Join","property","joinType","on","prop","order","Condition","value","opt","condition","EOrderDirection","EConditionOpt","HttpContentType","HttpMethod","DefaultResponse","DefaultQueryResponse","DefaultPageableQueryResponse","instanceByTargetType","target","isArray","isObject","mergeDataOrParams","args","coped","src","val","key","keys","cs","Executor","instance","url","e","resolve","reject","merge","resp","defaultResponse","defaultRequestData","defaultResultParams","_a","result","GetExecutor","params","PostExecutor","data","rd","QueryExecutor","PageableQueryExecutor","_HttpClient","reactive","_options","HttpClient"],"mappings":"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"}