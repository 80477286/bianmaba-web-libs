{"version":3,"file":"index.js","sources":["../../src/client/AbstractHttpClient.ts","../../../utils/dist/es/index.js","../../src/executors/request/Request.ts","../../src/executors/response/Response.ts","../../src/utils/utils.ts","../../src/executors/Executor.ts","../../src/executors/GetExecutor.ts","../../src/executors/PostExecutor.ts","../../src/executors/QueryExecutor.ts","../../src/executors/PageableQueryExecutor.ts","../../src/client/HttpClient.ts"],"sourcesContent":["import {AxiosInstance, AxiosStatic, CreateAxiosDefaults, default as axios} from \"axios\";\r\n\r\n\r\nexport default class AbstractHttpClient {\r\n    public defaultAxiosInstance: AxiosInstance;\r\n\r\n    constructor(options: CreateAxiosDefaults | any = {}) {\r\n        this.defaultAxiosInstance = axios.create(options || {})\r\n        console.log(\"create axios:\", this.defaultAxiosInstance)\r\n        this.defaultAxiosInstance.interceptors.response = axios.interceptors.response;\r\n        this.defaultAxiosInstance.interceptors.request = axios.interceptors.request;\r\n    }\r\n\r\n    /**\r\n     * 初始化默认能数\r\n     * @param options\r\n     */\r\n    public static defaults(setup: (axios: AxiosStatic) => any): void {\r\n        setup(axios);\r\n    }\r\n}","const d = Object.prototype.toString, B = ((t) => (e) => {\n  let r = d.call(e);\n  return t[r] || (t[r] = r.slice(8, -1).toLowerCase());\n})(/* @__PURE__ */ Object.create(null)), o = (t) => (t = t.toLowerCase(), function(r) {\n  return B(r) === t;\n}), z = (t, e) => function() {\n  return t.apply(e, arguments);\n}, a = (t) => Array.isArray(t), u = (t) => typeof t > \"u\", A = (t) => t !== null && !u(t) && t.constructor !== null && !u(t.constructor) && typeof t.constructor.isBuffer == \"function\" && t.constructor.isBuffer(t), m = o(\"ArrayBuffer\"), O = (t) => {\n  let e;\n  return typeof ArrayBuffer < \"u\" && ArrayBuffer.isView ? e = ArrayBuffer.isView(t) : e = t && t.buffer && m(t.buffer), e;\n}, l = (t) => typeof t == \"string\", I = (t) => typeof t == \"boolean\", F = (t) => typeof t == \"number\" && isFinite(t), $ = (t) => t != null && typeof t == \"object\" && Array.isArray(t) === !1, c = (t) => {\n  if (B(t) !== \"object\")\n    return !1;\n  let e = Object.getPrototypeOf(t);\n  return e === null || e === Object.prototype;\n}, S = o(\"Date\"), w = o(\"File\"), b = o(\"Blob\"), h = o(\"FileList\"), y = (t) => d.call(t) === \"[object Function]\", P = (t) => $(t) && y(t.pipe), E = (t) => {\n  let e = \"[object FormData]\";\n  return t && (typeof FormData == \"function\" && t instanceof FormData || d.call(t) === e || y(t.toString) && t.toString() === e);\n}, D = o(\"URLSearchParams\"), L = (t) => t.trim ? t.trim() : t.replace(/^\\s+|\\s+$/g, \"\"), N = () => typeof navigator < \"u\" && (navigator.product === \"ReactNative\" || navigator.product === \"NativeScript\" || navigator.product === \"NS\") ? !1 : typeof window < \"u\" && typeof document < \"u\", p = (t, e) => {\n  if (!(t === null || typeof t > \"u\"))\n    if (typeof t != \"object\" && (t = [t]), a(t))\n      for (let r = 0, n = t.length; r < n; r++)\n        e.call(null, t[r], r, t);\n    else\n      for (let r in t)\n        Object.prototype.hasOwnProperty.call(t, r) && e.call(null, t[r], r, t);\n}, U = (t, e, r) => (p(e, function(i, s) {\n  r && typeof i == \"function\" ? t[s] = z(i, r) : t[s] = i;\n}), t), V = (t) => (t.charCodeAt(0) === 65279 && (t = t.slice(1)), t), x = (t, e, r, n) => {\n  t.prototype = Object.create(e.prototype, n), t.prototype.constructor = t, r && Object.assign(t.prototype, r);\n}, j = (t, e, r) => {\n  let n, i, s, g = {};\n  e = e || {};\n  do {\n    for (n = Object.getOwnPropertyNames(t), i = n.length; i-- > 0; )\n      s = n[i], g[s] || (e[s] = t[s], g[s] = !0);\n    t = Object.getPrototypeOf(t);\n  } while (t && (!r || r(t, e)) && t !== Object.prototype);\n  return e;\n}, R = (t, e, r) => {\n  t = String(t), (r === void 0 || r > t.length) && (r = t.length), r -= e.length;\n  let n = t.indexOf(e, r);\n  return n !== -1 && n === r;\n}, T = (t) => {\n  if (!t)\n    return null;\n  let e = t.length;\n  if (u(e))\n    return null;\n  let r = new Array(e);\n  for (; e-- > 0; )\n    r[e] = t[e];\n  return r;\n}, M = function(t) {\n  return function(e) {\n    return t && e instanceof t;\n  };\n}(typeof Uint8Array < \"u\" && Object.getPrototypeOf(Uint8Array)), _ = (t = 1e3) => new Promise((e) => {\n  setTimeout(e, t);\n}), f = function(...t) {\n  let e = arguments[0], r = (n, i) => {\n    c(e[i]) && c(n) ? e[i] = f(e[i], n) : c(n) ? e[i] = f({}, n) : a(n) ? e[i] = n.slice() : e[i] = n;\n  };\n  for (let n = 0, i = arguments.length; n < i; n++)\n    p(arguments[n], r);\n  return e;\n}, C = function(t) {\n  return !!(t == null || t == null || l(t) && t === \"\");\n}, W = function(t) {\n  return !(t == null || t == null || l(t) && t === \"\");\n}, K = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({\n  __proto__: null,\n  delay: _,\n  endsWith: R,\n  extend: U,\n  forEach: p,\n  inherits: x,\n  isArray: a,\n  isArrayBuffer: m,\n  isArrayBufferView: O,\n  isBlob: b,\n  isBoolean: I,\n  isBuffer: A,\n  isDate: S,\n  isEmpty: C,\n  isFile: w,\n  isFileList: h,\n  isFormData: E,\n  isFunction: y,\n  isNotEmpty: W,\n  isNumber: F,\n  isObject: $,\n  isPlainObject: c,\n  isStandardBrowserEnv: N,\n  isStream: P,\n  isString: l,\n  isTypedArray: M,\n  isURLSearchParams: D,\n  isUndefined: u,\n  merge: f,\n  stripBOM: V,\n  toArray: T,\n  toFlatObject: j,\n  trim: L\n}, Symbol.toStringTag, { value: \"Module\" })), q = f, G = _, H = M, J = T, Q = R, X = j, Y = x, Z = V, k = U, v = p, tt = N, et = L, rt = D, nt = E, it = P, st = y, ot = h, ct = b, ut = w, ft = S, at = c, lt = $, yt = F, pt = l, dt = O, mt = m, $t = A, gt = u, Bt = a, At = C, Ot = W;\nexport {\n  K as default,\n  G as delay,\n  Q as endsWith,\n  k as extend,\n  v as forEach,\n  Y as inherits,\n  Bt as isArray,\n  mt as isArrayBuffer,\n  dt as isArrayBufferView,\n  ct as isBlob,\n  $t as isBuffer,\n  ft as isDate,\n  At as isEmpty,\n  ut as isFile,\n  ot as isFileList,\n  nt as isFormData,\n  st as isFunction,\n  Ot as isNotEmpty,\n  yt as isNumber,\n  lt as isObject,\n  at as isPlainObject,\n  tt as isStandardBrowserEnv,\n  it as isStream,\n  pt as isString,\n  H as isTypedArray,\n  rt as isURLSearchParams,\n  gt as isUndefined,\n  q as merge,\n  Z as stripBOM,\n  J as toArray,\n  X as toFlatObject,\n  et as trim\n};\n//# sourceMappingURL=index.js.map\n","export type RequestData = (DefaultQueryRequestData | DefaultPageableQueryRequestData | any);\r\nexport type RequestParams = any;\r\n\r\nexport interface IQueryRequestData {\r\n    query?: string | null\r\n    idProperty?: string | null\r\n    order?: Order\r\n    condition?: Condition\r\n    sorts?: Array<Order>\r\n    queryProperties?: Array<string>\r\n    excludeIds?: Array<string>\r\n    joins?: Array<Join> | Array<any>\r\n    fetches?: Array<Join> | Array<any>\r\n}\r\n\r\nexport interface IPageableQueryRequestData extends IQueryRequestData {\r\n    size: number\r\n    page: number\r\n    pageOffset?: number\r\n}\r\n\r\nexport class DefaultQueryRequestData implements IQueryRequestData {\r\n    order = new Order(\"id\", 'ascending')\r\n    queryProperties = ['id']\r\n}\r\n\r\nexport class DefaultPageableQueryRequestData extends DefaultQueryRequestData implements IPageableQueryRequestData {\r\n    size: number = 10\r\n    page: number = 1\r\n    pageOffset: number = -1\r\n\r\n    constructor(page: number = 1, size: number = 10, pageOffset: number = -1) {\r\n        super();\r\n        this.page = page;\r\n        this.size = size;\r\n        this.pageOffset = pageOffset;\r\n    }\r\n\r\n    setSize(size: number) {\r\n        this.size = size;\r\n    }\r\n\r\n    setPage(page: number) {\r\n        this.page = page;\r\n    }\r\n\r\n    setPageOffset(pageOffset: number) {\r\n        this.pageOffset = pageOffset;\r\n    }\r\n}\r\n\r\nexport class Join {\r\n    constructor(property?: string, joinType?: string, on?: Array<Condition>) {\r\n        this.property = property || this.property;\r\n        this.joinType = joinType || this.joinType;\r\n        this.on = on || this.on;\r\n    }\r\n\r\n    property: string | null = null\r\n    joinType: string | null = null\r\n    on: Array<Condition> | null = null\r\n\r\n    of(property: string, joinType: string, on: Array<Condition>) {\r\n        return new Join(property, joinType, on);\r\n    }\r\n}\r\n\r\n\r\nexport class Order {\r\n    prop?: string | null = null\r\n    order?: OrderDirection = 'ascending'\r\n\r\n    constructor(prop?: string, order?: OrderDirection) {\r\n        this.prop = prop\r\n        this.order = order;\r\n    }\r\n\r\n    of(prop: string, order: OrderDirection = EOrderDirection.Asc) {\r\n        return new Order(prop, order);\r\n    }\r\n}\r\n\r\n\r\nexport class Condition {\r\n    property?: string | null = null\r\n    value?: number | boolean | string | null | '' | Array<number | boolean | string> = null\r\n    opt: ConditionOpt = 'eq'\r\n    and: Array<Condition> = []\r\n    or: Array<Condition> = []\r\n\r\n    constructor(property?: string | null, value?: number | boolean | string | null | '' | Array<number | boolean | string>, opt?: ConditionOpt | null) {\r\n        this.property = property || this.property;\r\n        this.value = value || this.value;\r\n        this.opt = opt || this.opt;\r\n    }\r\n\r\n    addAnd(condition: Condition) {\r\n        this.and.push(condition);\r\n    }\r\n\r\n    addOr(condition: Condition) {\r\n        this.or.push(condition);\r\n    }\r\n}\r\n\r\nexport type ConditionOpt =\r\n    EConditionOpt\r\n    | 'equals'\r\n    | 'eq'\r\n    | 'ge'\r\n    | 'gt'\r\n    | 'lt'\r\n    | 'le'\r\n    | 'ne'\r\n    | 'notlike'\r\n    | 'like'\r\n    | 'like:'\r\n    | ':like'\r\n    | ':like:'\r\n    | 'lk'\r\n    | 'lk:'\r\n    | ':lk'\r\n    | ':lk:'\r\n    | 'between'\r\n    | 'btw'\r\n    | 'isnull'\r\n    | 'isnotnull'\r\n    | 'isempty'\r\n    | 'isnotempty'\r\n    | 'in'\r\n    | 'notin';\r\nexport type OrderDirection = EOrderDirection | 'asc' | 'desc' | 'descending' | 'ascending';\r\n\r\nexport enum EOrderDirection {\r\n    Asc = 'asc',\r\n    Desc = 'desc'\r\n}\r\n\r\nexport enum EConditionOpt {\r\n    equals = 'equals',\r\n    eq = 'eq',\r\n    ge = 'ge',\r\n    gt = 'gt',\r\n    lt = 'lt',\r\n    le = 'le',\r\n    ne = 'ne',\r\n    notlike = 'notlike',\r\n    like = 'like',\r\n    'like:' = 'like:',\r\n    ':like' = ':like',\r\n    ':like:' = ':like:',\r\n    'lk' = 'like',\r\n    'lk:' = 'like:',\r\n    ':lk' = ':like',\r\n    ':lk:' = ':like:',\r\n    between = 'between',\r\n    btw = 'btw',\r\n    isnull = 'isnull',\r\n    isnotnull = 'isnotnull',\r\n    isempty = 'isempty',\r\n    isnotempty = 'isnotempty',\r\n    in = 'in',\r\n    notin = 'notin'\r\n}\r\n\r\nexport enum HttpContentType {\r\n    'application/atom+xml' = 'application/atom+xml',\r\n    'application/json' = 'application/json',\r\n    'application/x-www-form-urlencoded' = 'application/x-www-form-urlencoded',\r\n    'application/xml' = 'application/xml',\r\n    'multipart/form-data' = 'multipart/form-data',\r\n    'text/html' = 'text/html',\r\n    'text/plain' = 'text/plain'\r\n}\r\n\r\nexport enum HttpMethod {\r\n    POST = 'POST',\r\n    GET = 'GET',\r\n    DELETE = 'DELETE',\r\n    HEAD = 'HEAD',\r\n    OPTIONS = 'OPTIONS',\r\n    PUT = 'PUT',\r\n    PATCH = 'PATCH',\r\n    PURGE = 'PURGE',\r\n    LINK = 'LINK',\r\n    UNLINK = 'UNLINK'\r\n}","export type Response = (IResponse | IPageableQueryResponse | any);\r\n\r\nexport interface IResponse {\r\n    success: boolean\r\n    result?: string | null\r\n    data?: Array<any> | any | null\r\n    errors?: Array<any>\r\n    messages?: Array<any>\r\n    extendedData?: any\r\n    status?: any\r\n    exception?: any\r\n    progressEvent?: { total?: number, loaded?: number, progress: number, uploaded?: number } | any\r\n}\r\n\r\nexport interface IPageableQueryResponse extends IResponse {\r\n    page?: number;\r\n    size?: number;\r\n    total?: number;\r\n    pageOffset?: number;\r\n}\r\n\r\nexport class DefaultResponse implements IResponse {\r\n    success: boolean = false;\r\n    data = null;\r\n    errors = [];\r\n    exception = null;\r\n    extendedData = null;\r\n    messages = [];\r\n    result = null;\r\n    status = null;\r\n    progressEvent = {progress: 0};\r\n}\r\n\r\nexport class DefaultQueryResponse extends DefaultResponse {\r\n    data = [] as any;\r\n}\r\n\r\n\r\nexport class DefaultPageableQueryResponse extends DefaultQueryResponse implements IPageableQueryResponse {\r\n    status = null;\r\n    total = 0;\r\n}\r\n","import {isArray, isObject, merge} from \"@bianmaba/utils\";\r\n\r\n/**\r\n * 只会对数组，对你，FormData,URLSearchParams的类型创建新对像\r\n * @param target\r\n */\r\nconst instanceByTargetType = (target: any) => {\r\n    if (target instanceof FormData) {\r\n        return new FormData();\r\n    } else if (target instanceof URLSearchParams) {\r\n        return new URLSearchParams();\r\n    } else if (isArray(target)) {\r\n        return [];\r\n    } else if (isObject(target)) {\r\n        return {};\r\n    }\r\n    return target;\r\n}\r\n/**\r\n * 合并参数，最终返回参数类型为最后一个参数的类型,注如果最后一个参数是数组则直接返回\r\n * @param args\r\n */\r\nexport const mergeDataOrParams = (...args: any[]) => {\r\n    if (args.length <= 0) {\r\n        return null;\r\n    }\r\n    if (isArray(args[args.length - 1])) {\r\n        return args[args.length - 1];\r\n    }\r\n    //克隆目标数据\r\n    let coped = instanceByTargetType(args[args.length - 1]);\r\n    for (let i = 0; i < args.length; i++) {\r\n        let src = args[i] || {}\r\n        //复制原数据到克隆数据\r\n        if (coped instanceof FormData || coped instanceof URLSearchParams || isObject(coped)) {\r\n            if (src instanceof FormData) {\r\n                src.forEach((val: FormDataEntryValue, key: string) => {\r\n                    if (coped instanceof FormData || coped instanceof URLSearchParams) {\r\n                        coped.append(key, val)\r\n                    } else {\r\n                        coped[key] = val\r\n                    }\r\n                })\r\n            } else if (src instanceof URLSearchParams) {\r\n                src.forEach((val, key) => {\r\n                    if (coped instanceof FormData || coped instanceof URLSearchParams) {\r\n                        coped.append(key, val)\r\n                    } else {\r\n                        coped[key] = val\r\n                    }\r\n                })\r\n            } else if (isObject(src)) {\r\n                let keys = Object.keys(src) as []\r\n                if (coped instanceof FormData || coped instanceof URLSearchParams) {\r\n                    keys.forEach(key => {\r\n                        coped.append(key, src[key])\r\n                    })\r\n                } else {\r\n                    let cs = JSON.parse(JSON.stringify(src))\r\n                    keys.forEach(key => {\r\n                        coped[key] = cs[key]\r\n                    })\r\n                }\r\n            }\r\n        }\r\n    }\r\n    //返回克降数据\r\n    return coped;\r\n}","\"use strict\";\r\nimport {AxiosInstance, AxiosRequestConfig, AxiosResponse, CreateAxiosDefaults} from \"axios\";\r\nimport {merge} from \"@bianmaba/utils\";\r\nimport {HttpContentType, RequestData, RequestParams} from \"./request/Request\";\r\nimport {DefaultResponse, Response} from \"./response/Response\";\r\nimport GetExecutor from \"./GetExecutor\";\r\nimport PostExecutor from \"./PostExecutor\";\r\nimport {mergeDataOrParams} from \"../utils/utils\";\r\n\r\nexport type ExecutorType = (Executor | GetExecutor | PostExecutor | any)\r\n\r\nexport default class Executor {\r\n    public controller: AbortController = new AbortController()\r\n    public instance: AxiosInstance;\r\n    public options: AxiosRequestConfig = {};\r\n    public url: string = '';\r\n    public loading: boolean = false;\r\n    public data: RequestData = {}\r\n    public params: RequestParams = {}\r\n    public response: Response = new DefaultResponse();\r\n    public defaultResponse: Response = new DefaultResponse();\r\n    public defaultRequestParams: Response = {} as RequestData;\r\n    public defaultRequestData: Response = {} as RequestData;\r\n\r\n    constructor(instance: AxiosInstance, url?: string, options: AxiosRequestConfig = {}) {\r\n        this.instance = instance;\r\n        this.url = url || this.url;\r\n        this.options = options;\r\n    }\r\n\r\n    public abort() {\r\n        this.controller.abort({success: false, result: '请求操作已被用户取消！'})\r\n    }\r\n\r\n    public initOptions(options: AxiosRequestConfig<any> | any = {}) {\r\n        options.signal = this.controller.signal;\r\n        if (options.onDownloadProgress) {\r\n            options._onDownloadProgress = options.onDownloadProgress\r\n            options.onDownloadProgress = (e: any) => {\r\n                this.data.progressEvent = e;\r\n                options._onDownloadProgress(e)\r\n            };\r\n        }\r\n        if (options.onUploadProgress) {\r\n            options._onUploadProgress = options.onUploadProgress\r\n            options.onUploadProgress = (e: any) => {\r\n                this.data.progressEvent = e;\r\n                options._onUploadProgress(e)\r\n            };\r\n        }\r\n    }\r\n\r\n    public execute(options: AxiosRequestConfig<any> | any = {}): Promise<Response> {\r\n        return new Promise((resolve, reject) => {\r\n            this.loading = true;\r\n            options = merge({}, this.options || {}, options || {})\r\n            options.data = mergeDataOrParams(this.defaultRequestData, this.data, options.data);\r\n            options.params = options.params = mergeDataOrParams(this.defaultRequestParams, this.params, options.params);\r\n            options.url = options.url ? options.url : this.url;\r\n            this.initOptions(options)\r\n            this.response = JSON.parse(JSON.stringify(this.defaultResponse))\r\n            this.instance.request(options).then((resp: AxiosResponse<any>) => {\r\n                try {\r\n                    this.handleThenResponse(resolve, resp);\r\n                } finally {\r\n                    this.loading = false;\r\n                }\r\n            }).catch((e) => {\r\n                try {\r\n                    this.handleCatchResponse(reject, e);\r\n                } finally {\r\n                    this.loading = false;\r\n                }\r\n            });\r\n        })\r\n    }\r\n\r\n\r\n    /**\r\n     * 将执行器请求方式设置为：application/json\r\n     */\r\n    public toJsonRequest(): ExecutorType {\r\n        merge(this.options, {headers: {'Content-Type': HttpContentType[\"application/json\"]}})\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 将执行器请求方式设置为：application/x-www-form-urlencoded\r\n     */\r\n    public toFormRequest(): ExecutorType {\r\n        merge(this.options, {headers: {'Content-Type': HttpContentType[\"application/x-www-form-urlencoded\"]}})\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 将执行器请求方式设置为：multipart/form-data\r\n     */\r\n    public toFormDataRequest(): ExecutorType {\r\n        merge(this.options, {headers: {'Content-Type': HttpContentType[\"multipart/form-data\"]}})\r\n        return this;\r\n    }\r\n\r\n    public setDefaultResponse(defaultResponse: Response = {}): ExecutorType {\r\n        this.defaultResponse = defaultResponse;\r\n        this.response = JSON.parse(JSON.stringify(this.defaultResponse));\r\n        return this;\r\n    }\r\n\r\n    public mergeDefaultResponse(defaultResponse: Response = {}): ExecutorType {\r\n        merge(this.defaultResponse, defaultResponse || {}, {});\r\n        this.response = JSON.parse(JSON.stringify(this.defaultResponse));\r\n        return this;\r\n    }\r\n\r\n    public setDefaultRequestData(defaultRequestData: RequestData = {}): ExecutorType {\r\n        this.defaultRequestData = defaultRequestData;\r\n        this.data = JSON.parse(JSON.stringify(this.defaultRequestData));\r\n        return this;\r\n    }\r\n\r\n    public mergeDefaultRequestData(defaultRequestData: RequestData = {}): ExecutorType {\r\n        merge(this.defaultRequestData, defaultRequestData || {});\r\n        this.data = JSON.parse(JSON.stringify(this.defaultRequestData));\r\n        return this;\r\n    }\r\n\r\n    public setDefaultResultParams(defaultResultParams: RequestParams = {}): ExecutorType {\r\n        this.defaultRequestParams = defaultResultParams;\r\n        this.params = JSON.parse(JSON.stringify(this.defaultRequestParams));\r\n        return this;\r\n    }\r\n\r\n    public handleThenResponse(resolve: (value: any) => void, resp: AxiosResponse<any>) {\r\n        this.response = merge({}, this.defaultResponse, resp.data);\r\n        let keys = Object.keys(this.response);\r\n        if (keys.indexOf(\"total\") > -1) {\r\n            this.data.total = this.response.total;\r\n        }\r\n        if (keys.indexOf(\"page\") > -1) {\r\n            this.data.page = this.response?.page - (this.data.pageOffset || 0);\r\n        }\r\n        if (keys.indexOf(\"size\") > -1) {\r\n            this.data.size = this.response.size;\r\n        }\r\n        resolve(this.response)\r\n    }\r\n\r\n\r\n    public handleCatchResponse(reject: (reason?: any) => void, e: any) {\r\n        console.error('远程请求发生异常：', e)\r\n        if (e.response) {\r\n            this.response = merge({}, this.defaultResponse, e.response.data);\r\n            reject(this.response)\r\n        } else {\r\n            let result = {success: false, result: '远程请求发生异常！'};\r\n            this.response = merge({}, this.defaultResponse, result);\r\n            reject(this.response)\r\n        }\r\n    }\r\n}","\"use strict\";\r\nimport Executor from \"./Executor\";\r\nimport {AxiosInstance, AxiosRequestConfig} from \"axios\";\r\nimport {merge} from \"@bianmaba/utils\";\r\nimport {Response} from \"./response/Response\";\r\nimport {mergeDataOrParams} from \"../utils/utils\";\r\n\r\nexport default class GetExecutor extends Executor {\r\n    constructor(instance: AxiosInstance, url?: string, options: AxiosRequestConfig = {}) {\r\n        super(instance, url, options);\r\n    }\r\n\r\n    public execute(params: any = {}, options: AxiosRequestConfig<any> | any = {}): Promise<Response> {\r\n        this.loading = true;\r\n        options = merge({}, this.options || {}, options || {})\r\n        options.params = mergeDataOrParams(this.defaultRequestParams, this.params, options.params, params);\r\n        this.initOptions(options)\r\n        this.response = JSON.parse(JSON.stringify(this.defaultResponse))\r\n        return new Promise((resolve, reject) => {\r\n            this.instance.get(options.url || this.url, options).then((resp) => {\r\n                try {\r\n                    this.handleThenResponse(resolve, resp);\r\n                } finally {\r\n                    this.loading = false;\r\n                }\r\n            }).catch(e => {\r\n                try {\r\n                    this.handleCatchResponse(reject, e);\r\n                } finally {\r\n                    this.loading = false;\r\n                }\r\n            });\r\n        })\r\n    }\r\n}\r\n\r\n","\"use strict\";\r\nimport Executor from \"./Executor\";\r\nimport {AxiosInstance, AxiosRequestConfig} from \"axios\";\r\nimport {isArray, isObject, merge} from \"@bianmaba/utils\";\r\nimport {DefaultQueryRequestData, RequestData, RequestParams} from \"./request/Request\";\r\nimport {DefaultPageableQueryResponse, Response} from \"./response/Response\";\r\nimport {mergeDataOrParams} from \"../utils/utils\";\r\n\r\nexport default class PostExecutor extends Executor {\r\n    constructor(instance: AxiosInstance, url?: string, options: AxiosRequestConfig = {}) {\r\n        super(instance, url, options);\r\n    }\r\n\r\n    public execute(data: RequestData | null = {}, params: RequestParams = {}, options: AxiosRequestConfig<any> | any = {}): Promise<Response> {\r\n        this.loading = true;\r\n        options = merge({},this.options || {}, options || {})\r\n        let rd = mergeDataOrParams(this.defaultRequestData, this.data, options.data, data);\r\n        options.params = mergeDataOrParams(this.defaultRequestParams, this.params, options.params, params);\r\n        this.initOptions(options)\r\n        this.response = JSON.parse(JSON.stringify(this.defaultResponse))\r\n        return new Promise((resolve, reject) => {\r\n            this.instance.post(options.url || this.url, rd, options).then((resp) => {\r\n                try {\r\n                    this.handleThenResponse(resolve, resp);\r\n                    resolve(resp.data)\r\n                } finally {\r\n                    this.loading = false;\r\n                }\r\n            }).catch(e => {\r\n                try {\r\n                    this.handleCatchResponse(reject, e);\r\n                } finally {\r\n                    this.loading = false;\r\n                }\r\n            })\r\n        })\r\n    }\r\n}","\"use strict\";\r\nimport {AxiosInstance, AxiosRequestConfig} from \"axios\";\r\nimport PostExecutor from \"./PostExecutor\";\r\nimport {DefaultQueryResponse, DefaultResponse} from \"./response/Response\";\r\nimport {DefaultQueryRequestData} from \"./request/Request\";\r\n\r\nexport default class QueryExecutor extends PostExecutor {\r\n    constructor(instance: AxiosInstance, url?: string, options: AxiosRequestConfig = {}) {\r\n        super(instance, url, options);\r\n        this.setDefaultResponse(new DefaultQueryResponse())\r\n        this.setDefaultRequestData(new DefaultQueryRequestData())\r\n    }\r\n}","\"use strict\";\r\nimport {AxiosInstance, AxiosRequestConfig} from \"axios\";\r\nimport QueryExecutor from \"./QueryExecutor\";\r\nimport {DefaultPageableQueryResponse, Response} from \"./response/Response\";\r\nimport {AxiosResponse} from \"axios/index\";\r\nimport {merge} from \"@bianmaba/utils\";\r\nimport {DefaultPageableQueryRequestData} from \"./request/Request\";\r\n\r\nexport default class PageableQueryExecutor extends QueryExecutor {\r\n    constructor(instance: AxiosInstance, url?: string, options: AxiosRequestConfig = {}) {\r\n        super(instance, url, options);\r\n        this.setDefaultResponse(new DefaultPageableQueryResponse())\r\n        this.setDefaultRequestData(new DefaultPageableQueryRequestData())\r\n    }\r\n}","import AbstractHttpClient from \"./AbstractHttpClient\";\r\nimport {CreateAxiosDefaults, default as axios} from \"axios\";\r\nimport Executor from \"../executors/Executor\";\r\nimport GetExecutor from \"../executors/GetExecutor\";\r\nimport PostExecutor from \"../executors/PostExecutor\";\r\n\r\nimport {reactive} from \"vue\";\r\nimport {merge} from \"@bianmaba/utils\";\r\nimport {HttpContentType, HttpMethod, RequestData, RequestParams} from \"../executors/request/Request\";\r\nimport QueryExecutor from \"../executors/QueryExecutor\";\r\nimport PageableQueryExecutor from \"../executors/PageableQueryExecutor\";\r\nimport {AxiosStatic} from \"axios/index\";\r\n\r\nexport default class HttpClient extends AbstractHttpClient {\r\n    private static instance: HttpClient | any;\r\n\r\n    constructor(options: CreateAxiosDefaults | any = {}) {\r\n        super(options)\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param options  axios实例配置选项，此选项中的data及params不会生效\r\n     */\r\n    public createRequestExecutor(url: string = '', options: CreateAxiosDefaults<any> | any = {}): Executor {\r\n        return reactive(new Executor(this.defaultAxiosInstance, url, options)) as Executor;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param options  axios实例配置选项，此选项中的data及params不会生效\r\n     */\r\n    public createGetExecutor(url: string = '', options: CreateAxiosDefaults<any> | any = {}): GetExecutor {\r\n        let _options = merge({\r\n            method: HttpMethod.GET,\r\n            headers: {'Content-Type': HttpContentType[\"application/x-www-form-urlencoded\"]}\r\n        }, options);\r\n        let executor = reactive(new GetExecutor(this.defaultAxiosInstance, url, _options)) as GetExecutor;\r\n        return executor;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param options  axios实例配置选项，此选项中的data及params不会生效\r\n     */\r\n    public createQueryExecutor(url: string = '', options: CreateAxiosDefaults<any> | any = {}): QueryExecutor {\r\n        let _options = merge({\r\n            method: HttpMethod.POST,\r\n            headers: {'Content-Type': HttpContentType[\"application/json\"]}\r\n        }, options);\r\n        let executor = reactive(new QueryExecutor(this.defaultAxiosInstance, url, _options)) as QueryExecutor;\r\n        return executor;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param options  axios实例配置选项，此选项中的data及params不会生效\r\n     */\r\n    public createPageableQueryExecutor(url: string = '', options: CreateAxiosDefaults<any> | any = {}): PageableQueryExecutor {\r\n        let _options = merge({\r\n            method: HttpMethod.POST,\r\n            headers: {'Content-Type': HttpContentType[\"application/json\"]}\r\n        }, options);\r\n        let executor = reactive(new PageableQueryExecutor(this.defaultAxiosInstance, url, _options)) as PageableQueryExecutor;\r\n        return executor;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param options  axios实例配置选项，此选项中的data及params不会生效\r\n     */\r\n    public createPostExecutor(url: string = '', options: CreateAxiosDefaults<any> | any = {}): PostExecutor {\r\n        let _options = merge({\r\n            method: HttpMethod.POST,\r\n            headers: {'Content-Type': HttpContentType[\"multipart/form-data\"]}\r\n        }, options);\r\n        let executor = reactive(new PostExecutor(this.defaultAxiosInstance, url, _options)) as PostExecutor;\r\n        return executor;\r\n    }\r\n\r\n    /**\r\n     * 获取HttpClient实例（单例模式），首将获取时会根据参数初始化实例，后续再获取时参数将不会生效，而是直接返回已经存在的实例\r\n     * @param options\r\n     */\r\n    public static getInstance(options?: CreateAxiosDefaults | any): HttpClient {\r\n        if (!this.instance) {\r\n            this.instance = new HttpClient(options);\r\n        } else {\r\n            if (options) {\r\n                console.error('实例已经存在，重获取实例时，配置选项将不会生效！')\r\n            }\r\n        }\r\n        return this.instance;\r\n    }\r\n\r\n    public static post(): PostMethod {\r\n        return {\r\n            do(url: string, data: RequestData = {}, params: RequestParams = {}, options: CreateAxiosDefaults = {}) {\r\n                return HttpClient.getInstance().createPostExecutor(url, options).execute(data, params)\r\n            },\r\n            multipartFormData(url: string, data: RequestData = {}, params: RequestParams = {}, options: CreateAxiosDefaults = {}) {\r\n                return HttpClient.getInstance().createPostExecutor(url, options).toFormDataRequest().execute(data, params)\r\n            },\r\n            form(url: string, data: RequestData = {}, params: RequestParams = {}, options: CreateAxiosDefaults = {}) {\r\n                return HttpClient.getInstance().createPostExecutor(url, options).toFormRequest().execute(data, params)\r\n            },\r\n            json(url: string, data: RequestData = {}, params: RequestParams = {}, options: CreateAxiosDefaults = {}) {\r\n                return HttpClient.getInstance().createPostExecutor(url, options).toJsonRequest().execute(data, params)\r\n            }\r\n        } as PostMethod\r\n    }\r\n\r\n\r\n    public static get(): GetMethods {\r\n        return {\r\n            do(url: string, params: RequestParams = {}, options: CreateAxiosDefaults = {}) {\r\n                return HttpClient.getInstance().createGetExecutor(url, options).execute(params)\r\n            }\r\n        } as GetMethods\r\n    }\r\n}\r\n\r\nexport interface GetMethods {\r\n    do: Function;\r\n}\r\n\r\nexport interface PostMethod {\r\n    do: Function;\r\n    multipartFormData: Function;\r\n    form: Function;\r\n    json: Function;\r\n}"],"names":["AbstractHttpClient","options","__publicField","axios","setup","d","B","t","r","o","a","$","c","p","n","f","i","q","lt","Bt","DefaultQueryRequestData","Order","DefaultPageableQueryRequestData","page","size","pageOffset","Join","property","joinType","on","prop","order","Condition","value","opt","condition","EOrderDirection","EConditionOpt","HttpContentType","HttpMethod","DefaultResponse","DefaultQueryResponse","DefaultPageableQueryResponse","instanceByTargetType","target","isArray","isObject","mergeDataOrParams","args","coped","src","val","key","keys","cs","Executor","instance","url","e","resolve","reject","merge","resp","defaultResponse","defaultRequestData","defaultResultParams","_a","result","GetExecutor","params","PostExecutor","data","rd","QueryExecutor","PageableQueryExecutor","_HttpClient","reactive","_options","HttpClient"],"mappings":"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"}